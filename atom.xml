<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>劉勇の博客</title>
  
  
  <link href="https://www.liuyong.online/atom.xml" rel="self"/>
  
  <link href="https://www.liuyong.online/"/>
  <updated>2022-10-27T12:22:29.000Z</updated>
  <id>https://www.liuyong.online/</id>
  
  <author>
    <name>Ryle Liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VTK②基础功能</title>
    <link href="https://www.liuyong.online/2021/01/01/VTK%E2%91%A1%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/"/>
    <id>https://www.liuyong.online/2021/01/01/VTK%E2%91%A1%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/</id>
    <published>2021-01-01T12:14:00.000Z</published>
    <updated>2022-10-27T12:22:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>基础功能里面有太多需要理解的东西了，从vtkRenderWindowInteractor, vtk Filter, vtkCamera, vtkLight开始吧</p><a id="more"></a><h3 id="vtkRenderWindowInteractor"><a href="#vtkRenderWindowInteractor" class="headerlink" title="vtkRenderWindowInteractor"></a>vtkRenderWindowInteractor</h3><p>  当对自己的数据做可视化的时候，显然咱得和可视化之后的数据有交互。所以尽管是非核心功能，也得有所了解。基本上，VTK提供了如下几种可选的方式： </p><ul><li>使用内建的vtkRenderWindowInteractor</li><li>创建自己的交互器绑定相应的事件</li><li>如果使用解释型语言，可以在运行时输入命令</li><li>从屏幕上选取数据可以用“Picking”</li></ul><p>最简单的方法当然就是用内建的vtkRenderWindowInteractor了，这个类已经为一系列预定义的事件和行为提供了响应，并且提供了override默认行为的方式。它允许咱们去控制Camera和Actor， 并且提供两种交互方式：①Position Sensitive，比如游戏操纵杆；②Motion Sensitive，比如轨迹球；下面就是已经定义好的事件响应（这里要特别指出的是，多个renderers可以渲染在同一个renderwindow，每个renderer有自己的viewport，而vtkRenderWindowInteractor支持和同一renderwindow中的多个render交互）</p><ul><li><p>j键 和 t键： 在position sensitive（<strong>J</strong>oystick）和motion sensitive（<strong>T</strong>rackball）两种模式中切换。在J模式下，只要按鼠标键就可以持续运动；在T模式下，只有按着鼠标键拖动鼠标的时候，运动才会发生。</p></li><li><p>c键 和 a键： c代表<strong>C</strong>amera， a代表<strong>A</strong>ctor。在C模式下，鼠标事件影响camera的位置和focalpoint；在A模式下，影响被鼠标指着的actor。</p></li><li><p>鼠标按键1， 2， 3</p><table><thead><tr><th>按键</th><th align="center">模式</th><th>说明</th></tr></thead><tbody><tr><td>Button 1</td><td align="center">Camera</td><td>让Camera绕其FocalPoint<strong>旋转</strong></td></tr><tr><td>Button 1</td><td align="center">Actor</td><td>让Actor绕其原点<strong>旋转</strong></td></tr><tr><td></td><td align="center"></td><td></td></tr><tr><td>Button 2</td><td align="center">Camera</td><td><strong>平移</strong>Camera</td></tr><tr><td>Button 2</td><td align="center">Actor</td><td><strong>平移</strong>Actor</td></tr><tr><td></td><td align="center"></td><td></td></tr><tr><td>Button 3</td><td align="center">Camera</td><td><strong>缩放</strong>Camera</td></tr><tr><td>Button 3</td><td align="center">Actor</td><td><strong>缩放</strong>Actor</td></tr></tbody></table></li><li><p>数字按键3： 切换render window的stereo mode</p></li><li><p>按键e 或者 q： 退出应用</p></li><li><p>按键f： 飞到鼠标点中的点，这事实上设置了focal point，然后允许围绕这个点旋转</p></li><li><p>按键p： 提供 Pick 操作</p></li><li><p>按键r： 重置camera</p></li><li><p>按键s： 让所有的actor都有表面</p></li><li><p>按键u： 进入用户定义的模式，也就是提供一个交互器，允许用户输入命令</p></li><li><p>按键w： 和s是反向的，显示actor的三维线框模型</p></li></ul><p>默认的交互style是position sensitive也就是J模式。</p><p>vtkRenderWindowInteractor还提供了另外一些有用的特性。</p><ul><li>比如默认的LightFollowCameraOn()会让light的位置和focal point和camera的位置和focal point保持同步。（当然，这个可以用LightFollowCameraOff()来关闭）</li><li>用来响应【按键U模式】的回调，可以AddObserver（UserEvent）</li><li>提供数种pick相关的方法，并AddObserver（StartPickEvent和EndPickEvent），还可以通过使用SetPicker()来继承vtkAbstractPicker，从而提供自定义的方法</li></ul><p>另外，如果基于这些交互想调整渲染的质量的话，可以通过SetDesiredUpdateRate()来设置希望的帧率。通常情况下，这个是自动处理的（鼠标激活，帧率提升，鼠标释放，帧率恢复）</p><p>在VTK中，有两种不同的控制交互的方式：</p><ul><li>子类化 vtkInteractorStyle  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_style = vtkInteractorStyleFlight()</span><br><span class="line">iren.SetInteractorStyle(my_style)      <span class="comment"># iren是一个vtkRenderWindowInteractor的实例</span></span><br></pre></td></tr></table></figure></li><li>在vtkRenderWindowInteractor增加oberservers，然后自定义一系列回调（3D 组件比较复杂, 以后另有专题）<br>  案例就参考 Examples/GUI/Python/CustomInteraction.py</li></ul><h3 id="Filter-Data"><a href="#Filter-Data" class="headerlink" title="Filter Data"></a>Filter Data</h3><p>这个容易理解多了，基本上可以看做Linux下面的管道的概念，继续拿CADPART来做说明：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">part = vtk.vtkSTLRead()</span><br><span class="line">part.SetFileName(<span class="string">&#x27;42400-IDGH.stl&#x27;</span>)</span><br><span class="line"></span><br><span class="line">shrink = vtk.vtkShrinkPolyData()</span><br><span class="line">shrink.SetInputConnection(part.GetOutputPort())</span><br><span class="line">shrink.SetShrinkFactor(<span class="number">0.85</span>)</span><br><span class="line"></span><br><span class="line">mapper = vtk.vtkPolyDataMapper()</span><br><span class="line">mapper.SetInputConnection(shrink.GetOutputPort())</span><br></pre></td></tr></table></figure><p>示意如下,需要注意的就是需要确保管道前后的数据类型的兼容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[part] --&gt; B(shrink)</span><br><span class="line">B --&gt; C[mapper]</span><br><span class="line">C --&gt; D[Actor]</span><br></pre></td></tr></table></figure><h3 id="vtkCamera"><a href="#vtkCamera" class="headerlink" title="vtkCamera"></a>vtkCamera</h3><p>在3D图像处理中，Camera和Light对于渲染对象来说是非常重要的，所以如果程序没有显式声明的话，VTK会默认实例化camera和light。</p><ul><li><p>实例化一个相机，并和渲染实例联系起来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cam1 = vtk.vtkCamera()    <span class="comment">#实例化一个camera</span></span><br><span class="line">cam1.SetClippingRange(<span class="number">0.0475572</span>, <span class="number">2.37786</span>) <span class="comment">#设定Clipping的范围，最近和最远，不在这个范围内的物体都自动被清除</span></span><br><span class="line">cam1.SetFocalPoint(0052665, -<span class="number">0.129454</span>, -<span class="number">0.0573973</span>) <span class="comment">#方向</span></span><br><span class="line">cam1.SetPosition(<span class="number">0.327637</span>, -<span class="number">0.116299</span>, -<span class="number">0.256418</span>) <span class="comment">#位置</span></span><br><span class="line">cam1.ComputeViewPlaneNormal() <span class="comment"># 默认的方式-这个需要具体学习一下</span></span><br><span class="line">cam1.SetViewUp(-<span class="number">0.0225386</span>, <span class="number">0.999137</span>, <span class="number">0.034901</span>) <span class="comment"># 相机向上的方向</span></span><br><span class="line">ren1.SetActiveCamera(cam1) </span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/wzheng92/article/details/79935059">CSDN上有很好的资料</a></p></li><li><p>获得当前已经存在的相机实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cam1 = ren1.GetActiveCamera()</span><br><span class="line">cam1.Zoom(<span class="number">1.4</span>)    <span class="comment"># 通过改变视角来了缩放（也可参考SetViewAngle()),另外还有Dolly()通过移动相机来缩放</span></span><br></pre></td></tr></table></figure></li><li><p>其他简单的操纵相机的方法【需要进一步理解】</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cam1.Azimuth(<span class="number">150</span>)    <span class="comment"># 相机以Focal Point为中心的球型轨迹移动的经度</span></span><br><span class="line">cam1.Elevation(<span class="number">160</span>)  <span class="comment"># 相机以Focal Point为中心的球型轨迹移动的维度</span></span><br><span class="line"><span class="string">&quot;&quot;&quot; 要注意的就是一般情况下不会改变view-up vector，但是在南北极点会和view plane平行 &quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot; 为了避免这种情况，需要强制使用OrthogonalizeViewUp()方法（正交）,这种情况会改变相机协同轨迹 &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>控制View的方向<br>相机最基础的功能是产生一个特定方向的视图，在程序上是通过这样的步骤来实现的：</p></li></ul><ol><li>设置相机的Focal Point <code>cam1.SetFocalPoint(0, 0, 0)    #x, y, z</code></li><li>设置相机的Position <code>cam1.SetPosition(1, 1, 1)    #x,y, z</code></li><li>设置相机的ViewPanel <code>cam1.ComputeViewPlaneNormal()</code></li><li>设置相机的ViewUp <code>cam1.SetViewUp(1, 0, 0)</code></li><li>设置相机是否正交  <code>cam1.OrthogonalizeViewUp()</code></li><li>设置相机为当前相机 <code>ren1.SetActiveCamera(cam1)</code></li><li>重置相机 <code>ren1.ResetCamera()</code><br>也就是说：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[设置相机基本属性] --&gt; B[激活相机为当前相机]</span><br><span class="line">B --&gt; C[重置舞台渲染的相机]</span><br></pre></td></tr></table></figure></li></ol><ul><li>透视(Perspective)和正交(Orghogonal)<ul><li>透视视图是通过视角(view angle)来调节角色(Actor)在View Plane上的成像的【点光源】</li><li>正交或者平行视图可以想象成【平行光】，物体的成像是不受距离影响的</li></ul>*这里的光不是光源，而是从看的角度出发的<br> 要开启正交视图，首先用 <code>cam1.ParallelProjectionOn()</code><br> 在正交视图中，视角不在用来控制缩放，而必须使用<code>cam1.SetParallelScale()</code></li><li>保存和恢复相机状态<br>这其实不用多做介绍，保存相机状态，至少需要保存Position、Focal Point、Clipping Range和View Up；恢复的话首先用保存的参数实例化一个相机，然后多一个步骤就是要<code>ren1.SetActiveCamera()</code><br>DN<h3 id="vtkLight"><a href="#vtkLight" class="headerlink" title="vtkLight"></a>vtkLight</h3>灯光比相机容易控制，最常用的方法就是<code>SetPosition()</code>, <code>SetFocalPoint()</code>和<code>SetColor()</code>;另外，相机的灯光可以用<code>SwitchOn()</code>和<code>SitchOff()</code>开关；用<code>SetIntensity()</code>来控制强度</li><li>默认的vtkLight实例是定向灯光，也就是说其位置(position)和焦点(focal point)定义了一个平行于光线行进方向的矢量，并且光源假定在无穷远处。这意味着如果位置和焦点被同样地改变的话，物体上的光照不变。<br>通常，我们用如下的定义灯光，比如红色的头灯，位于相机的位置，指向相机的焦点。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">light = vtk.vtkLight()</span><br><span class="line">light.SetColor(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">light.SetFocalPoint(cam1.GetFocalPoint())</span><br><span class="line">light.SetPosition(cam1.GetPosition())</span><br><span class="line">ren1.AddLight(light)</span><br></pre></td></tr></table></figure></li><li>定点光源Positional Lights【需要进一步理解】<br>使用<code>PositionalOn()</code>可以创建一个定点光源，可以和<code>SetConeAngle()</code>一起使用来控制聚光的面积，如果是180度的锥角的话，表明没有聚光效果而只有位置效果。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;基础功能里面有太多需要理解的东西了，从vtkRenderWindowInteractor, vtk Filter, vtkCamera, vtkLight开始吧&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="vtk" scheme="https://www.liuyong.online/tags/vtk/"/>
    
    <category term="3D" scheme="https://www.liuyong.online/tags/3D/"/>
    
    <category term="Visualization" scheme="https://www.liuyong.online/tags/Visualization/"/>
    
  </entry>
  
  <entry>
    <title>VTK③基础功能之上</title>
    <link href="https://www.liuyong.online/2021/01/01/VTK%E2%91%A2%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD%E4%B9%8B%E4%B8%8A/"/>
    <id>https://www.liuyong.online/2021/01/01/VTK%E2%91%A2%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD%E4%B9%8B%E4%B8%8A/</id>
    <published>2021-01-01T12:14:00.000Z</published>
    <updated>2022-10-27T12:22:29.012Z</updated>
    
    <content type="html"><![CDATA[<p>基础功能里面有太多需要理解的东西了，最基础的已经在前面学习了，今天还是稍微深入一点的话题，比如3D,纹理贴图这样的</p><a id="more"></a><h3 id="控制3D-道具"><a href="#控制3D-道具" class="headerlink" title="控制3D 道具"></a>控制3D 道具</h3><p>前面已经理解过了，渲染可以当做一个舞台，那么在舞台上显示的东西当然就是道具了。所以，所有在VTK渲染窗口显示的都可以称之为道具。事实上VTK定义了各种类型的道具， 比如vtkProp3D和vtkActor。vtkProp3D是3D空间那些道具的抽象超类，而vtkActor是vtkProp3D的具体实现，只是这个具体实现的几何形状是由多边形、线条灯解析基元来定义的。<a href="https://vtk.org/doc/nightly/html/classvtkActor.html">VTK文档的类参考文档</a>中可以看到这个继承关系。</p><ul><li><p>定义vtkProp3D的位置<br>前面我们学习了而让相机围绕一个物体移动，相应的我们也可以让相机保持静止，让物体移动。下面这些方法就是用来定义vtkProp3D及其子类的位置：</p><table><thead><tr><th>方法名称</th><th>方法描述</th></tr></thead><tbody><tr><td>SetPosition(x, y, z)</td><td>在世界坐标系中指定vtkProp3D物体的具体位置</td></tr><tr><td>AddPosition(deltaX, deltaY, deltaZ)</td><td>在X, Y, Z轴方向，根据指定的变化量deltaX-Y-Z移动vtkProp3D</td></tr><tr><td>RotateX(theta), RotateY(theta), RotateZ(theta)</td><td>分别围绕坐标轴X,Y,Z旋转【theta】度</td></tr><tr><td>SetOrientation(x, y, z)</td><td>根据参数来参照世界坐标系的X，Y，Z轴设置道具的方向</td></tr><tr><td>AddOrientation(a1, a2, a3)</td><td>增加道具当前的方向</td></tr><tr><td>RotateWXYZ(theta, x, y, z)</td><td>围绕以x-y-z定义的轴，旋转【theta】度</td></tr><tr><td>SetScale(sx, sy, sz)</td><td>在X,Y,Z轴方向上缩放</td></tr><tr><td>SetOrigin(x, y, z)</td><td>指定道具的原点，旋转和缩放都以这个为基准点</td></tr><tr><td>上面这些方法可以整合在一起，以实现复杂的位置转化，在数学上就是一个结果转化矩阵。这里需要强调的是，上面这些方法的组合的顺序会严重影响最终道具的位置。在VTK中，位置转换的顺序是这样的：</td><td></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">graph LR </span><br><span class="line">subgraph SHIFT</span><br><span class="line">A(Shift to Origin)</span><br><span class="line">F(Shift from Origin)</span><br><span class="line">end</span><br><span class="line">subgraph ROTATE</span><br><span class="line">C(Y) --&gt; D(X)</span><br><span class="line">D --&gt; E(Z)</span><br><span class="line">end</span><br><span class="line">A --&gt; B(Scale)</span><br><span class="line">B --&gt; C</span><br><span class="line">E --&gt; F</span><br><span class="line">F --&gt; G(Translate)</span><br></pre></td></tr></table></figure><p>这里要注意的是Shift To(向原点)和Shift From(从原点)，分别是对原点值的负平移和正平移，最终净平移由vtkProp3D的位置值给出。在这里需要注意旋转，因为先执行X旋转再执行Y旋转和倒叙操作的结果是完全不一样的。</p></li><li><p>角色Actors<br>Actor是最普遍使用的一种vtkProp3D。和其他子类一样，vtkActor用于分组渲染属性，如表面属性(如环境色、漫反射色和高光色)、表示(如表面或线框)、纹理映射和/或几何定义(映射器)。</p></li><li></li></ul><h3 id="Picking"><a href="#Picking" class="headerlink" title="Picking"></a>Picking</h3><h3 id="vtkLight"><a href="#vtkLight" class="headerlink" title="vtkLight"></a>vtkLight</h3><p>灯光比相机容易控制，最常用的方法就是<code>SetPosition()</code>, <code>SetFocalPoint()</code>和<code>SetColor()</code>;另外，相机的灯光可以用<code>SwitchOn()</code>和<code>SitchOff()</code>开关；用<code>SetIntensity()</code>来控制强度</p><ul><li>默认的vtkLight实例是定向灯光，也就是说其位置(position)和焦点(focal point)定义了一个平行于光线行进方向的矢量，并且光源假定在无穷远处。这意味着如果位置和焦点被同样地改变的话，物体上的光照不变。<br>通常，我们用如下的定义灯光，比如红色的头灯，位于相机的位置，指向相机的焦点。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">light = vtk.vtkLight()</span><br><span class="line">light.SetColor(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">light.SetFocalPoint(cam1.GetFocalPoint())</span><br><span class="line">light.SetPosition(cam1.GetPosition())</span><br><span class="line">ren1.AddLight(light)</span><br></pre></td></tr></table></figure></li><li>定点光源Positional Lights【需要进一步理解】<br>使用<code>PositionalOn()</code>可以创建一个定点光源，可以和<code>SetConeAngle()</code>一起使用来控制聚光的面积，如果是180度的锥角的话，表明没有聚光效果而只有位置效果。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;基础功能里面有太多需要理解的东西了，最基础的已经在前面学习了，今天还是稍微深入一点的话题，比如3D,纹理贴图这样的&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="vtk" scheme="https://www.liuyong.online/tags/vtk/"/>
    
    <category term="3D" scheme="https://www.liuyong.online/tags/3D/"/>
    
    <category term="Visualization" scheme="https://www.liuyong.online/tags/Visualization/"/>
    
  </entry>
  
  <entry>
    <title>VTK①基础概念</title>
    <link href="https://www.liuyong.online/2020/12/25/VTK%E2%91%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    <id>https://www.liuyong.online/2020/12/25/VTK%E2%91%A0%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</id>
    <published>2020-12-25T12:14:00.000Z</published>
    <updated>2022-10-27T12:22:28.984Z</updated>
    
    <content type="html"><![CDATA[<p>朋友对VTK和QT感起了兴趣，想我帮忙看一下。纯粹是外行，不过也无所谓了，所以就看一下吧~</p><a id="more"></a><p>从了解的角度来说，范围太大了，所以很难着手。按照惯例，就先看看VTK到底是什么吧。</p><h4 id="VTK的定义："><a href="#VTK的定义：" class="headerlink" title="VTK的定义："></a>VTK的定义：</h4><ul><li>VKT是Visualization Toolkit的简称，是一个开源、跨平台的图形应用函数库。最早是在19993年GE的三维工程师利用闲暇时间构建的，后来其中两位成立了<a href="https://www.kitware.com/">kitware</a>公司（1998年）。目前VTK在生物医疗和大型研究机构领域的应用特别广泛。</li><li>VTK的主要应用方向是三维计算机图形、图像处理及可视化。底层是OpenGL，采用面向对象的方式封装，本身是C++开发的，也提供包括Tcl/Tk、Java和Python的编程语言接口。显然，本人肯定是直接从VTK的Python入手的。</li><li>VTK目前的版本（2020年12月）最新为9.0，直接提供的是python的wheel文件，当然也有源代码供在各个不同的环境下面去编译。</li><li>VTK的学习资源（转载自CSDN的<a href="https://blog.csdn.net/www_doling_net">东灵工作室</a>）<ul><li><p>肯定是官网<a href="https://wtk.org/">VTK.org</a></p></li><li><p><a href="https://www.kitware.com/products/books/VTKUsersGuide.pdf">VTK User’s Guide</a>, 目前已经到Edition 11 </p></li><li><p><a href="https://lorensen.github.io/VTKExamples/site/VTKBook/00Preface/">The Visualization Toolkit:An Object-Oriented Approach to 3D Graphics, 4th Edition</a></p></li><li><p><a href="https://blog.kitware.com/the-source-newsletter/">Source</a>按季度发行的刊物</p></li><li><p><a href="https://vtk.org/doc/nightly/html/">VTK在线帮助文档</a>可以根据版本下载到本地</p></li><li><p><del><a href="https://public.kitware.com/mailman/listinfo/">VTK Users邮件列表</a></del></p></li><li><p><a href="https://discourse.vtk.org/">VTK论坛</a></p></li><li><p><a href="https://kitware.github.io/vtk-examples/site/">VTK Examples</a></p></li><li><p>其他</p><ul><li><p><a href="http://insight-journal.org/">Insight Journal</a>   Open Access on-line publication covering the domain for medicl image processing and visualization</p></li><li><p><a href="https://blog.csdn.net/www_doling_net">东灵工作室</a></p></li><li><p><a href="https://vtk.org/community-support/">VTK Community</a></p></li><li><p>VTK自带的各种Examples</p><h4 id="VTK的目录基本结构："><a href="#VTK的目录基本结构：" class="headerlink" title="VTK的目录基本结构："></a>VTK的目录基本结构：</h4></li></ul></li><li><p>InfoVis    信息可视化相关的类</p></li><li><p>Views      数据可视化的类，包括过滤器、可视化、交互和选择</p></li><li><p>CMake      用于编译的配置文件</p></li><li><p>Common     核心类库</p></li><li><p>Examples   各种参考案例</p></li><li><p>Filtering  可视化管道中与数据处理有关的类</p></li><li><p>GenericFiltering  与外部模拟包的接口适配框架</p></li><li><p>GeoVis     地形数据处理</p></li><li><p>Graphics   3D数据处理</p></li><li><p>GUISupport 界面开发的接口类，比如QT，MFC等等</p></li><li><p>Hybrid     同时对应图形学和图像处理功能</p></li><li><p>Imaging    图像处理</p></li><li><p>IO         读写数据</p></li><li><p>Parallel   并行处理</p></li><li><p>Rendering  渲染</p></li><li><p>Utilities  工具</p></li><li><p>VolumeRendering   体绘制</p></li><li><p>Widgets    3D组件</p></li><li><p>Wrapping   封装对包括TCL，Java和Python语言的支持</p><h4 id="VTK的基本体系结构和流程"><a href="#VTK的基本体系结构和流程" class="headerlink" title="VTK的基本体系结构和流程"></a>VTK的基本体系结构和流程</h4></li><li><p>大的概念图：C++的核心类库 和 编程接口</p></li><li><p>核心理念</p><ul><li>可视化管线</li><li>渲染引擎</li></ul></li><li><p>在我看来，VTK的理解可以分成三个部分：</p><pre><code>- 舞台，包括角色、相机、灯光、- 展现和互动，包括窗口和窗口互动模式- 数据源，角色的来源</code></pre><p>如果对应VTK的类，舞台就是vtkRender， 角色就是vtkActor，角色还有vtkProp,相机就是vtkCamera， 灯光就是vtkLight；数据源就是vtkXXXSource、vtkXXXFilter、vtkXXXDataMapper. 这些是VTK的核心<br>展现和互动就是renderwindow和renderwindowinteractor, 这个在应用中，一般好会自己来封装，比如用QT</p><h4 id="Python的简单代码"><a href="#Python的简单代码" class="headerlink" title="Python的简单代码"></a>Python的简单代码</h4><p>VTK用户手册里面CXX和Tcl/Tk的代码比较多，这里改造一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> vtkmodules.<span class="built_in">all</span> <span class="keyword">as</span> vtk    <span class="comment"># 可以直接import vtk 运行没问题，但是在pycharm vscode里面无法代码补全</span></span><br><span class="line"></span><br><span class="line">cylinder = vtk\.vtkCylinderSource()    <span class="comment"># 定义DataSource</span></span><br><span class="line">cylinder.SetResolution(<span class="number">8</span>)    <span class="comment"># 设置</span></span><br><span class="line"></span><br><span class="line">cylinder_mapper = vtk\.vtkPolyDataMapper()   <span class="comment"># 定义DataMapper</span></span><br><span class="line">cylinder_mapper.SetInputConnection(cylinder.GetOutputPort())    <span class="comment"># 数据源绑定</span></span><br><span class="line"></span><br><span class="line">cylinder_actor = vtk\.vtkActor()    <span class="comment"># 定义角色</span></span><br><span class="line">cylinder_actor.GetProperty().SetColor(<span class="number">1.0</span>， <span class="number">0.4</span>， <span class="number">0.3</span>)    <span class="comment"># 设定角色属性，这里是颜色</span></span><br><span class="line">cylinder_actor.RotateX(<span class="number">30.0</span>)    <span class="comment"># 属性更新</span></span><br><span class="line">cylinder_actor.RotateY(-<span class="number">45.0</span>)    <span class="comment"># 属性更新</span></span><br><span class="line">cylinder_actor.SetMapper(cylinder_mapper)    <span class="comment"># 绑定角色的数据源</span></span><br><span class="line"></span><br><span class="line">ren1 = vtk\.vtkRenderer()    <span class="comment"># 舞台来了，渲染对象，既然有1，就可以有2,3,......</span></span><br><span class="line">ren1.AddActor(cylinder_actor)    <span class="comment"># 舞台有了，角色登场</span></span><br><span class="line">ren1.SetBackground(<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.4</span>)    <span class="comment"># 舞台背景</span></span><br><span class="line"></span><br><span class="line">ren_win = vtk\.vtkRenderWindow()    <span class="comment"># 舞台的展示窗口</span></span><br><span class="line">ren_win.AddRenderer(ren1)    <span class="comment"># 把舞台放到展示窗口</span></span><br><span class="line">ren_win.SetSize(<span class="number">300</span>,<span class="number">300</span>)     <span class="comment"># 设置展示窗口大小</span></span><br><span class="line"></span><br><span class="line">iren = vtk\.vtkRenderWindowInteractor()    <span class="comment"># 得让观众和舞台上的交互啊</span></span><br><span class="line">iren.SetRenderWindow(ren_win)    <span class="comment"># 适合这个展示窗口交互</span></span><br><span class="line"></span><br><span class="line">iren.Initialize()    <span class="comment"># 交互初始化</span></span><br><span class="line">ren_win.Render()    <span class="comment"># 大幕来开，渲染</span></span><br><span class="line"></span><br><span class="line">iren.Start()    <span class="comment"># 交互开始</span></span><br></pre></td></tr></table></figure><h4 id="读源文件的代码【42400-IDGH-stl】"><a href="#读源文件的代码【42400-IDGH-stl】" class="headerlink" title="读源文件的代码【42400-IDGH.stl】"></a>读源文件的代码【42400-IDGH.stl】</h4><p>从7.1.1开始，examples中的数据就不再是文件名了（再往前就不知道了），这里以9.0为例，可以看到VTKData9.0.1里面的数据全部是md5加上.data或者.paxheader的文件，在用户手册中有些例程需要用到测试数据，这些数据哪里去找呢？比如，例程：VTK/Examples/Rendering/Python/CADPart.py, 读取“42400-IDGH.stl”文件。在VTK9.0.1的源代码中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find |grep 42400-IDGH.stl</span><br></pre></td></tr></table></figure><p>结果是 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./Testing/Data/42400-IDGH.stl.SHA512</span><br></pre></td></tr></table></figure><p>也就是能在Testing的Data目录中找到这个文件，是个文本文件，打开就是字符串“7edca2078c26d9647f189353967634c9c4c104b3ef7c81191f1cdb2dc6ba9ce43a357e38d618ac48c342d975ca2a454bc497f04b09c5dbe65823c430b862ef76” 然后通过这个字符串到VTKDATA9.0.1中去查找：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep 7edca2078c26d9647f189353967634c9c4c104b3ef7c81191f1cdb2dc6ba9ce43a357e38d618ac48c342d975ca2a454bc497f04b09c5dbe65823c430b862ef76 *.paxheader</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ 10b64a3c281b0dbb15d798e3ff87dcd770018220.paxheader:169 path=VTK-9.0.1/.ExternalData/SHA512/7edca2078c26d9647f189353967634c9c4c104b3ef7c81191f1cdb2dc6ba9ce43a357e38d618ac48c342d975ca2a454bc497f04b09c5dbe65823c430b862ef76 </span><br></pre></td></tr></table></figure><p>显然，也即是文件【10b64a3c281b0dbb15d798e3ff87dcd770018220.paxheader】所对应的数据文件就是42400-IDGH.stl<br>直接把10b64a3c281b0dbb15d798e3ff87dcd770018220.data的文件名改成42400-IDGH.stl，然后再CADPart.py中重新指定文件位置，一切OK！</p></li></ul></li></ul><p>到这里，VTK的第一部分就基本记录完毕了！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;朋友对VTK和QT感起了兴趣，想我帮忙看一下。纯粹是外行，不过也无所谓了，所以就看一下吧~&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="vtk" scheme="https://www.liuyong.online/tags/vtk/"/>
    
    <category term="3D" scheme="https://www.liuyong.online/tags/3D/"/>
    
    <category term="Visualization" scheme="https://www.liuyong.online/tags/Visualization/"/>
    
  </entry>
  
  <entry>
    <title>VUE起步</title>
    <link href="https://www.liuyong.online/2020/12/08/VUE%E8%B5%B7%E6%AD%A5/"/>
    <id>https://www.liuyong.online/2020/12/08/VUE%E8%B5%B7%E6%AD%A5/</id>
    <published>2020-12-08T12:14:00.000Z</published>
    <updated>2022-10-27T12:22:28.980Z</updated>
    
    <content type="html"><![CDATA[<p>听说VUE挺好，找个时间来看看！</p><a id="more"></a><p>VUE的入门就几样东西：</p><ol><li>结构</li></ol><ul><li>template（在HTML中用id来表示）</li><li>script （VUE的程序</li><li>style （显示的样式）</li></ul><ol start="2"><li>指令</li></ol><ul><li>v-for</li><li>v-if/v-else</li><li>v-bind</li><li>v-on </li><li>v-model</li><li>v-show</li></ul><ol start="3"><li>组件</li></ol><ul><li>注册组件</li><li>引用组件</li><li>组件逻辑</li></ul><ol start="4"><li><p>语法</p></li><li><p>生命周期</p></li><li><p>计算属性和侦听</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;听说VUE挺好，找个时间来看看！&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="vue" scheme="https://www.liuyong.online/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>django国际化处理</title>
    <link href="https://www.liuyong.online/2020/11/25/django%E5%9B%BD%E9%99%85%E5%8C%96%E5%A4%84%E7%90%86/"/>
    <id>https://www.liuyong.online/2020/11/25/django%E5%9B%BD%E9%99%85%E5%8C%96%E5%A4%84%E7%90%86/</id>
    <published>2020-11-25T12:14:00.000Z</published>
    <updated>2022-10-27T12:22:28.980Z</updated>
    
    <content type="html"><![CDATA[<p>django的国际化是个比较大的坑，百度出来的好多都是形式正确，而实际并不work！[我使用的是django2.2LTS版本]</p><a id="more"></a><h4 id="设置文件-settings-py-配置"><a href="#设置文件-settings-py-配置" class="headerlink" title="设置文件 settings.py 配置"></a>设置文件 settings.py 配置</h4><p>  setting.py有3个注意点</p><ul><li>  MIDDLEWARE</li><li>  TEMPLATES</li><li>其他（主要是LANGUAGE 和 i18N，L10N）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">IDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.locale.LocaleMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [],</span><br><span class="line">        <span class="string">&#x27;APP_DIRS&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;context_processors&#x27;</span>: [</span><br><span class="line">            <span class="string">&#x27;django.template.context_processors.i18n&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.debug&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.request&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line">LOCALE_PATHS = [</span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">&#x27;locale&#x27;</span>),</span><br><span class="line">]</span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="需要多语言对应的文件，一般为model和view"><a href="#需要多语言对应的文件，一般为model和view" class="headerlink" title="需要多语言对应的文件，一般为model和view"></a>需要多语言对应的文件，一般为model和view</h4>需要引入相关的包，本人在Bodhi上不需要安装gettext，据说在windows下面需要自己安装<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.utils.translation <span class="keyword">import</span> gettext_lazy <span class="keyword">as</span> _</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    context = &#123;<span class="string">&#x27;display_welcome&#x27;</span>: _(<span class="string">&quot;Welcome!&quot;</span>)&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>, context)</span><br></pre></td></tr></table></figure><h4 id="命令行操作及翻译"><a href="#命令行操作及翻译" class="headerlink" title="命令行操作及翻译"></a>命令行操作及翻译</h4></li></ul><ol><li><p>坑就在这里了，必须是zh_Hans（<em>H必须为大写</em>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin makemessages -l zh_Hans</span><br></pre></td></tr></table></figure></li><li><p>到对应的目录下面去寻找django.po文件，应该为/locale/zh_Hans/LC_MESSAGES<br>把文件里msgid对应的msgstr翻译好。</p></li><li><p>再执行编译命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin compilemessages</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;django的国际化是个比较大的坑，百度出来的好多都是形式正确，而实际并不work！[我使用的是django2.2LTS版本]&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="django" scheme="https://www.liuyong.online/tags/django/"/>
    
    <category term="python" scheme="https://www.liuyong.online/tags/python/"/>
    
    <category term="国际化" scheme="https://www.liuyong.online/tags/%E5%9B%BD%E9%99%85%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>python文字转语音的几种方式</title>
    <link href="https://www.liuyong.online/2020/10/31/python%E6%96%87%E5%AD%97%E8%BD%AC%E8%AF%AD%E9%9F%B3%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>https://www.liuyong.online/2020/10/31/python%E6%96%87%E5%AD%97%E8%BD%AC%E8%AF%AD%E9%9F%B3%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</id>
    <published>2020-10-31T06:14:00.000Z</published>
    <updated>2022-10-27T12:22:29.004Z</updated>
    
    <content type="html"><![CDATA[<p>给老大报了一个python的启蒙班，第一天上课讲让电脑朗读，用的是培训机构自己的包ybc，想着看看有没有其他包，发现了几个常见的解决方案：pyWin32, pyttsx3, 百度或者讯飞的sdk或者cloud service</p><a id="more"></a><h4 id="猿编程的包"><a href="#猿编程的包" class="headerlink" title="猿编程的包"></a>猿编程的包</h4><p>  这个是猿编程自己的封装，核心就是speak函数，参数是字符串和角色，角色从1-7,有男女老少。具体可以看<a href="http://www.yuanfudao.com/tutor-ybc-course-api/pymodule/ybc_module/y_ybc.html">猿编程文档1.0</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ybc</span><br><span class="line"></span><br><span class="line">ybc.speak(<span class="string">&#x27;猿编程&#x27;</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="pyttsx3"><a href="#pyttsx3" class="headerlink" title="pyttsx3"></a>pyttsx3</h4><p>  这个看上去是使用比较频繁的包，有人说对中文支持不好，但是我测试了一下，没发现什么问题，可以对voice，rate和volumn进行调节。<br>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyttsx3</span><br><span class="line"></span><br><span class="line">engine = pyttsx3.init()</span><br><span class="line">rate = engine.getProperty(<span class="string">&#x27;rate&#x27;</span>)</span><br><span class="line">engine.setProperty(<span class="string">&#x27;rate&#x27;</span>, rate+<span class="number">10</span>)</span><br><span class="line">volumn = engine.getProperty(<span class="string">&#x27;volumn&#x27;</span>)</span><br><span class="line">engine.say(<span class="string">&#x27;测试&#x27;</span>)</span><br><span class="line">engine.runAndWait()  </span><br></pre></td></tr></table></figure></p><h4 id="pyWin32"><a href="#pyWin32" class="headerlink" title="pyWin32"></a>pyWin32</h4><p>这个是使用了pyWin32的功能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> Dispatch</span><br><span class="line"></span><br><span class="line">speaker = Dispatch(<span class="string">&quot;SAPI.SpVoice&quot;</span>)</span><br><span class="line">speaker.Speak(<span class="string">&quot;不要想东想西，看东看西，好好做作业！&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>百度的API或者SDK</li><li>科大讯飞的API或者SDK</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;给老大报了一个python的启蒙班，第一天上课讲让电脑朗读，用的是培训机构自己的包ybc，想着看看有没有其他包，发现了几个常见的解决方案：pyWin32, pyttsx3, 百度或者讯飞的sdk或者cloud service&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="pyttsx3" scheme="https://www.liuyong.online/tags/pyttsx3/"/>
    
    <category term="pyWin32" scheme="https://www.liuyong.online/tags/pyWin32/"/>
    
    <category term="百度" scheme="https://www.liuyong.online/tags/%E7%99%BE%E5%BA%A6/"/>
    
    <category term="讯飞" scheme="https://www.liuyong.online/tags/%E8%AE%AF%E9%A3%9E/"/>
    
  </entry>
  
  <entry>
    <title>Python小屋练手④编程自测31-40</title>
    <link href="https://www.liuyong.online/2020/10/14/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A3%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B31-40/"/>
    <id>https://www.liuyong.online/2020/10/14/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A3%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B31-40/</id>
    <published>2020-10-14T15:19:00.000Z</published>
    <updated>2022-10-27T12:22:28.968Z</updated>
    
    <content type="html"><![CDATA[<p>这是董付国老师的自测题的第四部分，31~40题</p><a id="more"></a><!-- more --><ol start="31"><li>函数main接收一个正整数n，要求返回斐波那契数列中前n项的和。例如当n=4时，计算1、1、2、3四项之和为7。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n</span>):</span></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> n == <span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">lst = [<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n):</span><br><span class="line">lst.append(lst[i-<span class="number">1</span>]+lst[i-<span class="number">2</span>])</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sum</span>(lst)</span><br></pre></td></tr></table></figure></li><li>函数main接收一个字符串s和正整数n，要求返回字符串s重复n次之后的长字符串，如果只传递s就返回重复3次得到的字符串。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">s, n=<span class="number">3</span></span>):</span></span><br><span class="line"><span class="keyword">return</span> s*n</span><br></pre></td></tr></table></figure></li><li>函数main接收一个字符串s和正整数n，其中n的大小不超过s的长度，要求返回字符串s循环左移n位之后的结果。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">s, n</span>):</span></span><br><span class="line"><span class="keyword">return</span> s[n:]+s[<span class="number">0</span>:n]</span><br></pre></td></tr></table></figure></li><li>类Number用来模拟整数类型的部分操作，要求构造方法可以接收一个整数，并且支持2个Number对象的加法运算，返回一个Number对象，使用print（）内置函数输出Number对象时得到Number对象内部实际的值。main函数接收2个Number对象，返回一个Number对象。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Number</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, value</span>):</span></span><br><span class="line">self.value = value</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__add__</span>(<span class="params">self, another</span>):</span></span><br><span class="line"><span class="keyword">return</span> Number(self.value + another.value)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">str</span>(self.value)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">x, y</span>):</span></span><br><span class="line"><span class="keyword">return</span> x+y</span><br></pre></td></tr></table></figure></li><li>类Number模拟一个整数或实数类的部分操作，要求支持接收一个整数或者实数然后创建一个Number对象（如果初始值不是整数或实数，则设置内部数据成员的值为整数0），为Number实现属性value并支持返回和修改Number对象内部数据成员的值，要求内部数据成员只能为整数或实数，如果试图修改为非整数或者非实数时，保持原来的值不变。main函数接收2个整数或实数x，y为参数。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Number</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, value</span>):</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span>(value) != <span class="built_in">int</span> <span class="keyword">and</span> <span class="built_in">type</span>(value) != <span class="built_in">float</span>:</span><br><span class="line">self.__value = <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self.__value = value</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__set</span>(<span class="params">self, value</span>):</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span>(value) == <span class="built_in">int</span> <span class="keyword">or</span> <span class="built_in">type</span>(value) == <span class="built_in">float</span>:</span><br><span class="line">self.__value = value</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__get</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="keyword">return</span> self.__value</span><br><span class="line">value = <span class="built_in">property</span>(__get, __set)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">x, y</span>):</span></span><br><span class="line">obj = Number(x)</span><br><span class="line">obj.value = y</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">type</span>(obj), obj.value)</span><br></pre></td></tr></table></figure></li><li>函数main接收任意多个表示电阻值的正整数，要求计算并返回这些电阻并联时的实际电阻值，结果保留1位小数。【多个电阻并联时，实际电阻的倒数为各个电阻值倒数之和】<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">*para</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;&#123;:.1f&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">1</span>/<span class="built_in">sum</span>([<span class="number">1</span>/x <span class="keyword">for</span> x <span class="keyword">in</span> para]))</span><br></pre></td></tr></table></figure></li><li>函数main接收一个正整数n，要求判断其是否为黑洞数，如果是则返回True，否则返回False【黑洞数：各位数字所能组成的最大数与最小数之差恰好等于原来的数，比如954-459=495】<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n</span>):</span></span><br><span class="line">lst = <span class="built_in">list</span>(<span class="built_in">str</span>(n))</span><br><span class="line">lst.sort()</span><br><span class="line">iMin = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(lst))</span><br><span class="line">lst.reverse()</span><br><span class="line">iMax = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(lst))</span><br><span class="line"><span class="keyword">if</span> iMax - iMin == n:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li>函数main接收一个正整数n，要求判断其是否为水仙数，如果是则返回True，否则返回False【水仙数：如果一个k为正整数n的各位数字的k次方之和恰好等于原来的数字n，那么n为水仙花数，比如153=1<em>1</em>1+5<em>5</em>5+3<em>3</em>3】<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n</span>):</span></span><br><span class="line">lst = <span class="built_in">list</span>(<span class="built_in">str</span>(n))</span><br><span class="line">k = <span class="built_in">len</span>(lst)</span><br><span class="line">nLst = [<span class="built_in">pow</span>(<span class="built_in">int</span>(x), k) <span class="keyword">for</span> x <span class="keyword">in</span> lst]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">sum</span>(nLst) == n:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li>函数main接收一个包含若干整数的列表lst，要求返回其中所有数字绝对值之和。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sum</span>([<span class="built_in">abs</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> lst])</span><br></pre></td></tr></table></figure></li><li>函数main接收一个字符串s，要求返回一个元组，其第一个元素是s使用UTF8编码之后的字符串，第二个元素是使用GBK编码之后的字符串。如果参数s不是字符串，返回‘参数必须为字符串’<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">s</span>):</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">return</span> ( s.encode(<span class="string">&quot;UTF-8&quot;</span>), s.encode(<span class="string">&quot;GBK&quot;</span>) )</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;参数必须为字符串&#x27;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是董付国老师的自测题的第四部分，31~40题&lt;/p&gt;</summary>
    
    
    
    <category term="个人情怀" scheme="https://www.liuyong.online/categories/feeling/"/>
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="Python" scheme="https://www.liuyong.online/tags/Python/"/>
    
    <category term="董付国" scheme="https://www.liuyong.online/tags/%E8%91%A3%E4%BB%98%E5%9B%BD/"/>
    
    <category term="编程题自测" scheme="https://www.liuyong.online/tags/%E7%BC%96%E7%A8%8B%E9%A2%98%E8%87%AA%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python小屋练手⑤编程自测题41-50</title>
    <link href="https://www.liuyong.online/2020/10/14/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A4%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B%E9%A2%9841-50/"/>
    <id>https://www.liuyong.online/2020/10/14/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A4%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B%E9%A2%9841-50/</id>
    <published>2020-10-14T15:08:12.000Z</published>
    <updated>2022-10-27T12:22:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是董付国老师的自测题的第五部分，41~50题</p><a id="more"></a><ol start="41"><li>函数main接收若干字符串，如果第一个字符串包含从第二个往后的所有字符串，返回True，否则返回False。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">s1, s2, *s3</span>):</span></span><br><span class="line">    <span class="keyword">if</span> s1.find(s2) == -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s3)):</span><br><span class="line">        <span class="keyword">if</span> s1.find(s3[i]) == -<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure></li><li>函数main接收一个参数r，要求计算返回以r为半径的圆的面积，使用math模块中已经导入的圆周率PI，结果保留2位小数。如果参数r不是大于0的整数或实数，就返回字符串‘参数必须是大于0的整数或实数’。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi <span class="keyword">as</span> PI</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">r</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(r) != <span class="built_in">float</span> <span class="keyword">and</span> <span class="built_in">type</span>(r) != <span class="built_in">int</span> <span class="keyword">or</span> r &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;参数必须是大于0的整数或实数&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(PI * <span class="built_in">pow</span>(r,<span class="number">2</span>))</span><br></pre></td></tr></table></figure></li><li>函数main接收一个包含若干正整数的列表lst，要求返回这些正整数首尾相接能够组成的最大数字。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line">    nLst = <span class="built_in">list</span>(permutations(lst))</span><br><span class="line">    strV = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>, nLst[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(nLst)):</span><br><span class="line">        <span class="keyword">if</span> strV &lt; <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,nLst[i])):</span><br><span class="line">            strV = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,nLst[i]))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(strV)</span><br></pre></td></tr></table></figure></li><li>假设其他共有n行n列小格子，在第一个小格子方1粒米，第二个小格子放2粒米，第三个小格子放4粒米，第四个小格子放8粒米，以此类推，以后每个小格子的米是前一个格子的2倍。函数main接收正整数n，计算n行n列期盼所有小格子里米粒的总数。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n</span>):</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">pow</span>(n,<span class="number">2</span>)):</span><br><span class="line">        total += <span class="built_in">pow</span>(<span class="number">2</span>, i)</span><br><span class="line">    <span class="keyword">return</span> total</span><br></pre></td></tr></table></figure></li><li>函数main接收包含若干字符串的列表lst，返回其中变成小写之后最大的字符串。如果参数lst不是列表或者其中的元素不都是字符串，返回字符串‘数据格式不正确’<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(lst, <span class="built_in">list</span>) <span class="keyword">or</span> <span class="keyword">not</span> <span class="built_in">all</span>(<span class="built_in">isinstance</span>(x, <span class="built_in">str</span>) <span class="keyword">for</span> x <span class="keyword">in</span> lst):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;数据格式不正确&#x27;</span></span><br><span class="line">    nLst = [x.lower() <span class="keyword">for</span> x <span class="keyword">in</span> lst]</span><br><span class="line">    <span class="keyword">return</span> lst[nLst.index(<span class="built_in">max</span>(nLst))]</span><br></pre></td></tr></table></figure></li><li>函数main接收一个包含若干整数或实数的列表lst，要求返回其中出现次数最多的一个，如果有多余一个并列最多，就返回最大的一个。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line">    t_dict = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">        t_dict[i] = lst.count(i)</span><br><span class="line">    max_value = <span class="built_in">max</span>(t_dict.values())</span><br><span class="line">    max_key = []</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> t_dict.items():</span><br><span class="line">        <span class="keyword">if</span> v == max_value:</span><br><span class="line">            max_key.append(k)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(max_key)</span><br></pre></td></tr></table></figure></li><li>函数main接收表示三角形两个边长的实数a、b及表示它们家教的实数theta（单位为角度），要求根据余弦定理计算返回第三边长，保留一位小数。要求a和b都是大于0的实数，theta是介于（0,180）开区间的实数，否则返回‘数据不对’。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> cos, radians</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">a, b, theta</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a = <span class="built_in">float</span>(a)</span><br><span class="line">        b = <span class="built_in">float</span>(b)</span><br><span class="line">        theta = <span class="built_in">float</span>(theta)</span><br><span class="line">        <span class="keyword">if</span> a &gt; <span class="number">0</span> <span class="keyword">and</span> b &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="number">0</span> &lt; theta &lt; <span class="number">180</span>: </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#123;:.1f&#125;&#x27;</span>.<span class="built_in">format</span>( <span class="built_in">pow</span>( (<span class="built_in">pow</span>(a,<span class="number">2</span>) + <span class="built_in">pow</span>(b,<span class="number">2</span>) - \</span><br><span class="line">                     <span class="number">2</span> * a * b * cos(radians(theta))), <span class="number">0.5</span> ) ) </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;数据不对&#x27;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;数据不对&#x27;</span></span><br></pre></td></tr></table></figure></li><li>函数main接收2个包含若干整数的列表vector1和vector2，要求检查两个列表是否长度相等且只包含整数或实数，如果是则计算并返回对应位置元素之差绝对值的和，否则返回字符串‘数据不对’。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">vector1, vector2</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(vector1, <span class="built_in">list</span>) <span class="keyword">and</span> <span class="built_in">isinstance</span>(vector2, <span class="built_in">list</span>) \</span><br><span class="line">        <span class="keyword">and</span> <span class="built_in">all</span>(<span class="built_in">isinstance</span>(x, (<span class="built_in">int</span>, <span class="built_in">float</span>)) <span class="keyword">for</span> x <span class="keyword">in</span> vector1) \</span><br><span class="line">        <span class="keyword">and</span> <span class="built_in">all</span>(<span class="built_in">isinstance</span>(x, (<span class="built_in">int</span>, <span class="built_in">float</span>)) <span class="keyword">for</span> x <span class="keyword">in</span> vector2) \</span><br><span class="line">        <span class="keyword">and</span> <span class="built_in">len</span>(vector1) == <span class="built_in">len</span>(vector2):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x, y: <span class="built_in">abs</span>(x-y), vector1, vector2)))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;数据不对&#x27;</span></span><br></pre></td></tr></table></figure></li><li>函数main接收一个表示百分制成绩的实数score，要求返回对应的字母等级。A对应于[90,100]，B对应于[80,89]，C对应于[70,79],D对应于[60,69]，F对应于[0,59]，其他参数值一律返回字符串‘数据不对’<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">score</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        score = <span class="built_in">float</span>(score)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">90</span> &lt;= score &lt;= <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="number">80</span> &lt;= score &lt;= <span class="number">89</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="number">70</span> &lt;= score &lt;= <span class="number">79</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="number">60</span> &lt;= score &lt;=<span class="number">69</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;D&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="number">0</span> &lt;= score &lt;=<span class="number">59</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;F&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;数据不对&#x27;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;数据不对&#x27;</span></span><br></pre></td></tr></table></figure></li><li>函数main接收一个正整数n，要求返回斐波那契数列中小于等于n的最大数。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n</span>):</span></span><br><span class="line">    a,b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> b &lt; n:</span><br><span class="line">        a, b = b, b+a</span><br><span class="line">        <span class="keyword">if</span> b == n:</span><br><span class="line">            <span class="keyword">return</span> b</span><br><span class="line">    <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是董付国老师的自测题的第五部分，41~50题&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    
    <category term="Python" scheme="https://www.liuyong.online/tags/Python/"/>
    
    <category term="董付国" scheme="https://www.liuyong.online/tags/%E8%91%A3%E4%BB%98%E5%9B%BD/"/>
    
    <category term="编程自测" scheme="https://www.liuyong.online/tags/%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python小屋练手③编程自测题21-30</title>
    <link href="https://www.liuyong.online/2020/10/07/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A2%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B%E9%A2%9821-30/"/>
    <id>https://www.liuyong.online/2020/10/07/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A2%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B%E9%A2%9821-30/</id>
    <published>2020-10-07T06:30:00.000Z</published>
    <updated>2022-10-27T12:22:28.972Z</updated>
    
    <content type="html"><![CDATA[<ol start="21"><li>函数isPrime()接收一个大于等于2的正整数num，判断其是否为素数，是返回True，否则返回False。函数main接收一个大于等于2的正整数n，要求返回不超过n的最大素数。<a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span>(<span class="params">num</span>):</span></span><br><span class="line"><span class="keyword">if</span> num == <span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(<span class="built_in">pow</span>(num, <span class="number">0.5</span>))):</span><br><span class="line"><span class="keyword">if</span> num % i == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n</span>):</span></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n, <span class="number">2</span>, -<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> isPrime(i):</span><br><span class="line"><span class="keyword">return</span> i</span><br></pre></td></tr></table></figure></li><li>函数main接收两个正整数n和i，返回组合数C（n，i）的值，也就是从n个物体中任选i个物体有多少种选法，要求结果为整数。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n, i</span>):</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>, n-i, -<span class="number">1</span>):</span><br><span class="line">n = n * j</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i+<span class="number">1</span>):</span><br><span class="line">n = n // j</span><br><span class="line"><span class="keyword">return</span> n</span><br></pre></td></tr></table></figure></li><li>函数main接收一个大于等于1的正整数n和一个介于[0,9]区间的正整数a，要求返回表达式a+aa+aaa+…+aa..aa前n项的和<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n, a</span>):</span></span><br><span class="line">retV, calV = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n):</span><br><span class="line">calV = calV * <span class="number">10</span> + a</span><br><span class="line">retV = retV + calV</span><br><span class="line"><span class="keyword">return</span> retV</span><br></pre></td></tr></table></figure></li><li>已知当前文件夹中文件data24.txt中有若干用英文半角逗号分隔的整数，函数main用来读取文件中的内容，把每个数字乘以10，返回这些乘积结果组成的列表。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span> (<span class="string">&#x27;data24.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">cList = f.read().strip().split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> [<span class="built_in">int</span>(x)*<span class="number">10</span> <span class="keyword">for</span> x <span class="keyword">in</span> cList]</span><br><span class="line">print(main())</span><br></pre></td></tr></table></figure></li><li>函数main接收一个包含若干集合的列表lst，要求返回这些集合的并集<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line">s = <span class="built_in">set</span>(lst[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(lst)):</span><br><span class="line">s = <span class="built_in">set</span>.union(s, <span class="built_in">set</span>(lst[i]))</span><br><span class="line"><span class="keyword">return</span> s</span><br></pre></td></tr></table></figure></li><li>函数main接收一个包含若干表示角度的实数的列表lst，要求返回这些实数转化为弧度之后的正弦值组成的新列表。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sin, radians</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line"><span class="keyword">return</span> [sin(radians(x)) <span class="keyword">for</span> x <span class="keyword">in</span> lst]</span><br></pre></td></tr></table></figure></li><li>函数main接收6个整数，其中year1，month1，day1表示一个日期的年月日，year2，month2，day2表示另一个日期的年月日，要求返回这两个日期之间相差的天数（必须为0或者正数）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> date</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">year1, month1, day1, year2, month2, day2</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">abs</span>((date(year1,month1,day1)-date(year2,month2,day2)).days)</span><br></pre></td></tr></table></figure></li><li>函数main接收一个表示年份的正整数year，要求判断是否为闰年，是闰年就返回字符串yes，否则返回no<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">year</span>):</span></span><br><span class="line"><span class="keyword">if</span> year%<span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year%<span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span> year%<span class="number">400</span> ==<span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;yes&#x27;</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;no&#x27;</span></span><br></pre></td></tr></table></figure></li><li>函数main接收一个单参数函数func和一个包含若干实数的列表lst，要求计算lst中的每个实数作为自变量时func的函数值，返回其中的最大值<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">func, lst</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">max</span>([func(x) <span class="keyword">for</span> x <span class="keyword">in</span> lst])</span><br></pre></td></tr></table></figure></li><li>函数main接收一个包含若干正整数的元组tup，要求计算并返回这些整数的截尾平均数，也就是去掉一个最高分和最低分之后剩余数字的算术平均数，结果保留1位小数。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">tup</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&#123;:.1f&#125;&quot;</span>.<span class="built_in">format</span>((<span class="built_in">sum</span>(tup) - <span class="built_in">max</span>(tup) - <span class="built_in">min</span>(tup)) / (<span class="built_in">len</span>(tup) - <span class="number">2</span>))</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;ol start=&quot;21&quot;&gt;
&lt;li&gt;函数isPrime()接收一个大于等于2的正整数num，判断其是否为素数，是返回True，否则返回False。函数main接收一个大于等于2的正整数n，要求返回不超过n的最大素数。</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="Python" scheme="https://www.liuyong.online/tags/Python/"/>
    
    <category term="董付国" scheme="https://www.liuyong.online/tags/%E8%91%A3%E4%BB%98%E5%9B%BD/"/>
    
    <category term="python小屋" scheme="https://www.liuyong.online/tags/python%E5%B0%8F%E5%B1%8B/"/>
    
    <category term="编程题自测" scheme="https://www.liuyong.online/tags/%E7%BC%96%E7%A8%8B%E9%A2%98%E8%87%AA%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python小屋练手②编程自测题11-20</title>
    <link href="https://www.liuyong.online/2020/10/06/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A1%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B%E9%A2%9811-20/"/>
    <id>https://www.liuyong.online/2020/10/06/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A1%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B%E9%A2%9811-20/</id>
    <published>2020-10-06T04:51:00.000Z</published>
    <updated>2022-10-27T12:22:28.988Z</updated>
    
    <content type="html"><![CDATA[<ol start="11"><li>计算并返回两个列表向量的内积，也就是对应分量乘积的和。例如对于v1=[1,2,3]，v2=[4,5,6]，计算1<em>4+2</em>5+3*5=32，返回32。<a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> mul</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">vector1, vector2</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sum</span>(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x,y: x*y, vector1, vector2)))</span><br></pre></td></tr></table></figure></li><li>返回最长的字符串<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sorted</span>(lst, key=<span class="keyword">lambda</span> x:<span class="built_in">len</span>(x), reverse=<span class="literal">True</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></li><li>返回一个包含原列表lst中所有非0整数的新列表，且其中的所有整数保持原来的相对顺序<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x!=<span class="number">0</span>, lst))</span><br></pre></td></tr></table></figure></li><li>返回绝对值最大的整数<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line">retV = <span class="built_in">max</span>([<span class="built_in">abs</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> lst])</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">index = lst.index(retV)</span><br><span class="line"><span class="keyword">return</span> lst[index]</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">index = lst.index(-retV)</span><br><span class="line"><span class="keyword">return</span> lst[index]</span><br></pre></td></tr></table></figure></li><li>返回其中所有奇数组成的新列表<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line"><span class="keyword">return</span> [x <span class="keyword">for</span> x <span class="keyword">in</span> lst <span class="keyword">if</span> x%<span class="number">2</span> !=<span class="number">0</span>]</span><br></pre></td></tr></table></figure></li><li>返回一个长度为20的新字符串，原字符串s的内容再新字符串中居中，如果原字符串s长度小于20，就在两侧用#填充；如果s不小于20，则直接返回s<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">s</span>):</span></span><br><span class="line"><span class="keyword">return</span> s.center(<span class="number">20</span>, <span class="string">&#x27;#&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>要求把阿拉伯数字0~9变成汉字零到九，其他非阿拉伯数字保持不变<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">s</span>):</span></span><br><span class="line">inStr=<span class="string">&#x27;0123456789&#x27;</span></span><br><span class="line">outStr=<span class="string">&#x27;零一二三四五六七八九&#x27;</span></span><br><span class="line"><span class="keyword">return</span> s.translate(s.maketrans(inStr, outStr))</span><br></pre></td></tr></table></figure></li><li>要求判断是否存在重复的整数，如果所有整数完全一样，返回0；如果所有整数互不相同，返回1；如果部分相同则返回2；<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line">s = <span class="built_in">set</span>(lst)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(s) == <span class="number">1</span> <span class="keyword">and</span> <span class="built_in">len</span>(lst) != <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">len</span>(s) == <span class="built_in">len</span>(lst):</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li>要求删除英文字母之外的其他所有字符，然后判断剩余的英文字母字符串是否为回文，是回文则返回True，否则返回False<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">s</span>):</span></span><br><span class="line">ns = re.sub(<span class="string">r&#x27;[^a-zA-Z]&#x27;</span>,<span class="string">&#x27;&#x27;</span>, s)</span><br><span class="line"><span class="keyword">if</span> ns[::-<span class="number">1</span>] == ns:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li>要求返回其中出现次数最多的前3个字符组成的列表，并按从多到少排列<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">s</span>):</span></span><br><span class="line">lst_dict = Counter(s).most_common(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">return</span> [lst_dict[<span class="number">0</span>][<span class="number">0</span>], lst_dict[<span class="number">1</span>][<span class="number">0</span>], lst_dict[<span class="number">2</span>][<span class="number">0</span>]]</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;ol start=&quot;11&quot;&gt;
&lt;li&gt;计算并返回两个列表向量的内积，也就是对应分量乘积的和。例如对于v1=[1,2,3]，v2=[4,5,6]，计算1&lt;em&gt;4+2&lt;/em&gt;5+3*5=32，返回32。</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="Python" scheme="https://www.liuyong.online/tags/Python/"/>
    
    <category term="董付国" scheme="https://www.liuyong.online/tags/%E8%91%A3%E4%BB%98%E5%9B%BD/"/>
    
    <category term="python小屋" scheme="https://www.liuyong.online/tags/python%E5%B0%8F%E5%B1%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python小屋练手①编程自测题1-10</title>
    <link href="https://www.liuyong.online/2020/10/06/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A0%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B%E9%A2%981-10/"/>
    <id>https://www.liuyong.online/2020/10/06/Python%E5%B0%8F%E5%B1%8B%E7%BB%83%E6%89%8B%E2%91%A0%E7%BC%96%E7%A8%8B%E8%87%AA%E6%B5%8B%E9%A2%981-10/</id>
    <published>2020-10-06T03:38:00.000Z</published>
    <updated>2022-10-27T12:22:29.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>计算并返回任意正整数n的阶乘<a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n</span>):</span></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> n * main(n-<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li>计算并返回任意多个证书的和<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">*args</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sum</span>(args)</span><br></pre></td></tr></table></figure></li><li>给定任意列表lst和一个任意值item，返回item在lst中第一次出现的位置，如果不存在则返回’不存在’<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst, item</span>):</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">return</span> lst.index(item)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;不存在&#x27;</span></span><br></pre></td></tr></table></figure></li><li>返回包含原列表中大于或等于所有整数平均值的整数列表<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line">avg = <span class="built_in">sum</span>(lst) / <span class="built_in">len</span>(lst)</span><br><span class="line"><span class="keyword">return</span> [x <span class="keyword">for</span> x <span class="keyword">in</span> lst <span class="keyword">if</span> x &gt;= avg]</span><br></pre></td></tr></table></figure></li><li>返回元组，第一个元素为p整除q的商，第二个元素为p对q的余数<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">p, q</span>):</span></span><br><span class="line"><span class="keyword">return</span> (p//q, p%q)</span><br></pre></td></tr></table></figure></li><li>返回正整数num各位数字之和<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">num</span>):</span></span><br><span class="line">retV = num % <span class="number">10</span></span><br><span class="line"><span class="keyword">while</span> num // <span class="number">10</span> &gt; <span class="number">0</span>:</span><br><span class="line">num = num // <span class="number">10</span></span><br><span class="line">retV += num % <span class="number">10</span></span><br><span class="line"><span class="keyword">return</span> retV</span><br></pre></td></tr></table></figure></li><li>返回一个新列表，包含原列表中的唯一元素，且保持原列表中首次出现的相对位置<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line">retList = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(lst)):</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">index = retList.index(lst[i])</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">retList.append(lst[i])</span><br><span class="line"><span class="keyword">return</span> retList</span><br></pre></td></tr></table></figure></li><li>返回一个新列表，包含原列表中每个字符串变成小写之后的字符串<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line"><span class="keyword">return</span> [x.lower() <span class="keyword">for</span> x <span class="keyword">in</span> lst]</span><br></pre></td></tr></table></figure></li><li>返回一个新列表，将原列表中每个字符串长度从大到小排列<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">lst</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sorted</span>(lst, key=<span class="keyword">lambda</span> x:<span class="built_in">len</span>(x), reverse=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></li><li>接收一个正整数n，返回n的阶乘，编写代码调用改函数，分别计算并输出20,、30、40的阶乘，不允许修改已有代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> mul</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">n</span>):</span></span><br><span class="line"><span class="keyword">return</span> reduce(mul, <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>))</span><br><span class="line">print(main(<span class="number">20</span>))</span><br><span class="line">print(main(<span class="number">30</span>))</span><br><span class="line">print(main(<span class="number">40</span>))</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;计算并返回任意正整数n的阶乘</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
    <category term="Python" scheme="https://www.liuyong.online/tags/Python/"/>
    
    <category term="董付国" scheme="https://www.liuyong.online/tags/%E8%91%A3%E4%BB%98%E5%9B%BD/"/>
    
    <category term="python小屋" scheme="https://www.liuyong.online/tags/python%E5%B0%8F%E5%B1%8B/"/>
    
    <category term="编程题自测" scheme="https://www.liuyong.online/tags/%E7%BC%96%E7%A8%8B%E9%A2%98%E8%87%AA%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>④上代码</title>
    <link href="https://www.liuyong.online/2020/09/25/%E2%91%A3%E4%B8%8A%E4%BB%A3%E7%A0%81/"/>
    <id>https://www.liuyong.online/2020/09/25/%E2%91%A3%E4%B8%8A%E4%BB%A3%E7%A0%81/</id>
    <published>2020-09-25T13:47:00.000Z</published>
    <updated>2022-10-27T12:22:29.004Z</updated>
    
    <content type="html"><![CDATA[<p>核心代码3大块：</p><a id="more"></a><ol><li>微信中获取随申码</li><li>钉钉中登记并上传截图</li><li>钉钉换成哓黑板<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> win32gui</span><br><span class="line"><span class="keyword">import</span> win32con</span><br><span class="line"><span class="keyword">import</span> win32api</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pyautogui</span><br><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> shelve</span><br><span class="line"><span class="keyword">from</span> ConfigData <span class="keyword">import</span> ConfigData <span class="keyword">as</span> cd</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">本程序主要实现3个功能：</span></span><br><span class="line"><span class="string">①登陆微信，找到随申办小程序，然后获得包括本人和亲属的随申码，并保存成jpg文件</span></span><br><span class="line"><span class="string">②登陆钉钉，找到相应的组织机构，根据要求提交每日健康申报</span></span><br><span class="line"><span class="string">③登陆晓黑板，根据班级要求，提交每日健康申报</span></span><br><span class="line"><span class="string">本程序主要通过pywin32和pyautogui对应用的窗口进行定位，使用了图片比对和像素定位</span></span><br><span class="line"><span class="string">两种方式，目前版本[v1.0]不支持文字识别。</span></span><br><span class="line"><span class="string">主要存在的限制：</span></span><br><span class="line"><span class="string">①必须安装微信、钉钉和晓黑板的PC客户端版本</span></span><br><span class="line"><span class="string">②在微信中，必须先安装&#x27;随申办&#x27;小程序, 并注册用户；然后将亲属随申码都申请好</span></span><br><span class="line"><span class="string">③在配置参数中：</span></span><br><span class="line"><span class="string">- familyList这个参数的名单：亲属顺序根据微信’随申码‘的顺序，本人(微信登录用户)在最后,根据钉钉的设置，最多5个人</span></span><br><span class="line"><span class="string">④由于暂不支持文字识别，所以在定位控件的时候都是采用pyautogui的图片比较，在图片比较失效的情况下，采用默认定位位置，</span></span><br><span class="line"><span class="string">因此，如果需要更换一些参数，比如省-市-区，比如钉钉的组织的话，需要的操作如下：</span></span><br><span class="line"><span class="string">A) 钉钉的组织修改：</span></span><br><span class="line"><span class="string">方法A： 先登录钉钉，并将默认组织修改为小孩所在的班级</span></span><br><span class="line"><span class="string">方法B： 登录钉钉，将小孩所在的班级的图片截图下来，并命名为dd_org.png和dd_orgselected.png放在img文件夹下</span></span><br><span class="line"><span class="string">B) 钉钉日报提交的省-市-区的修改</span></span><br><span class="line"><span class="string">方法A： 登录钉钉，手工提交一次，以后钉钉会默认记住</span></span><br><span class="line"><span class="string">方法B： 登录钉钉，将自己所在的省市区截图，然后命名为</span></span><br><span class="line"><span class="string">Sheng.png和Sheng_selected.png</span></span><br><span class="line"><span class="string">Shi.png和Shi_selected.png</span></span><br><span class="line"><span class="string">Qu.png和Qu_selected.png</span></span><br><span class="line"><span class="string">已知BUG：</span></span><br><span class="line"><span class="string">①在钉钉和晓黑板打开文件的对话框的时候，需要事先手工打开一次，把文件夹定位到本目录，确保寻找随申码文件不会失效</span></span><br><span class="line"><span class="string">*后续版本会考虑去除这个BUG</span></span><br><span class="line"><span class="string">②微信如果打开的时候为扫码登录的话，应用可能会报错，但是只要扫码登录了，应用将继续正常运行</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">__author__ = <span class="string">&#x27;Ryle[ryle@liu.group]&#x27;</span></span><br><span class="line">__version__ = <span class="string">&#x27;v1.0&#x27;</span></span><br><span class="line"><span class="comment"># 日志</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLogger</span>(<span class="params">basicLogFileName, logFileName, logLevel=logging.DEBUG, logMode=<span class="number">1</span></span>):</span></span><br><span class="line"><span class="comment"># 日志格式</span></span><br><span class="line">logFormat = logging.Formatter(<span class="string">&#x27;%(asctime)s - %(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s&#x27;</span>)</span><br><span class="line"><span class="comment"># 定义日志</span></span><br><span class="line">logging.basicConfig(filename=basicLogFileName,</span><br><span class="line"><span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s - %(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s&#x27;</span>,</span><br><span class="line">level=logLevel)</span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line">logger.setLevel(level=logLevel)</span><br><span class="line"><span class="keyword">if</span> logMode == <span class="number">0</span>:</span><br><span class="line">ch = logging.StreamHandler()</span><br><span class="line">ch.setLevel(logLevel)</span><br><span class="line">ch.setFormatter(logFormat)</span><br><span class="line">logger.addHandler(ch)</span><br><span class="line"><span class="keyword">elif</span> logMode == <span class="number">1</span>:</span><br><span class="line">fh = logging.FileHandler(logFileName)</span><br><span class="line">fh.setLevel(logLevel)</span><br><span class="line">fh.setFormatter(logFormat)</span><br><span class="line">logger.addHandler(fh)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">ch = logging.StreamHandler()</span><br><span class="line">ch.setLevel(logLevel)</span><br><span class="line">ch.setFormatter(logFormat)</span><br><span class="line">logger.addHandler(ch)</span><br><span class="line">fh = logging.FileHandler(logFileName)</span><br><span class="line">fh.setLevel(logLevel)</span><br><span class="line">fh.setFormatter(logFormat)</span><br><span class="line">logger.addHandler(fh)</span><br><span class="line"><span class="keyword">return</span> logger</span><br><span class="line"><span class="comment">#获得保存的密码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPassword</span>(<span class="params">key</span>):</span></span><br><span class="line">db = shelve.<span class="built_in">open</span>(cd.passwordFile)</span><br><span class="line">retValue = db[key]</span><br><span class="line">db.close()</span><br><span class="line"><span class="keyword">return</span> retValue</span><br><span class="line"><span class="comment"># 把指定的窗口移动到新的位置，一般是0,0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moveWindow</span>(<span class="params">window, newLeft, newTop</span>):</span></span><br><span class="line">win32gui.ShowWindow(window, win32con.SW_SHOWNORMAL)</span><br><span class="line"><span class="comment"># 把窗口激活</span></span><br><span class="line">win32gui.SetForegroundWindow(window)</span><br><span class="line">left, top, right, bottom = win32gui.GetWindowRect(window)</span><br><span class="line"><span class="comment"># 把窗口移动到（0，0）</span></span><br><span class="line">win32gui.MoveWindow(window, cd.left, cd.top, <span class="built_in">abs</span>(right-left), <span class="built_in">abs</span>(bottom-top), cd.repaint)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 启动应用程序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">startApp</span>(<span class="params">appName</span>):</span></span><br><span class="line">logger.info(<span class="string">&quot;启动应用程序：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(appName))</span><br><span class="line">win32api.ShellExecute(<span class="number">0</span>, <span class="string">&#x27;open&#x27;</span>, appName, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 微信登录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wxLogin</span>():</span></span><br><span class="line"><span class="comment"># 定位微信login窗口，并点击登录</span></span><br><span class="line">target_x, target_y = getClickPosition(cd.wxLoginBtnPic, cd.wxLoginBtn_x, cd.wxLoginBtn_y)</span><br><span class="line">logger.debug(<span class="string">&quot;微信登录窗口位置：&#123;&#125;/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(target_x, target_y))</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 显示登录窗口并等待手机微信确认登录</span></span><br><span class="line">wxWindow = win32gui.FindWindow(cd.wxWindowClass, cd.wxWindowName)</span><br><span class="line"><span class="keyword">while</span> wxWindow == <span class="number">0</span>:</span><br><span class="line">time.sleep(cd.generalWaitTime_speed_high)    <span class="comment">#  每隔0.2秒确认一下是否手机已经认登录</span></span><br><span class="line">wxWindow = win32gui.FindWindow(cd.wxWindowClass, cd.wxWindowName)</span><br><span class="line">logger.debug(<span class="string">&quot;返回微信主窗口句柄：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(wxWindow))</span><br><span class="line"><span class="keyword">return</span> wxWindow</span><br><span class="line"><span class="comment"># 钉钉登录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ddLogin</span>():</span></span><br><span class="line"><span class="comment"># 定位钉钉Login窗口，并点击密码登录，</span></span><br><span class="line">target_x, target_y = getClickPosition(cd.ddPasswordLoginPic, cd.ddPasswordLogin_x, cd.ddPasswordLogin_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 显示密码登录窗口，可以输入手机号和密码（手机国别选择暂时不支持）</span></span><br><span class="line"><span class="comment"># 手机号</span></span><br><span class="line">target_x, target_y = getClickPosition(cd.ddInputPhoneNumber, cd.ddInputPhoneNumber_x, cd.ddInputPhoneNumber_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">pyautogui.press(<span class="string">&#x27;backspace&#x27;</span>)</span><br><span class="line">pyautogui.write(cd.ddLoginPhone)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 密码</span></span><br><span class="line">target_x, target_y = getClickPosition(cd.ddInputPassword, cd.ddInputPassword_x, cd.ddInputPassword_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">pyautogui.press(<span class="string">&#x27;backspace&#x27;</span>)</span><br><span class="line">pyautogui.write(getPassword(<span class="string">&#x27;dingding&#x27;</span>))</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 点击登录按钮</span></span><br><span class="line">target_x, target_y = getClickPosition(cd.ddLoginBtn, cd.ddLoginBtn_x, cd.ddLoginBtn_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)</span><br><span class="line">ddMainWindow = win32gui.FindWindow(cd.ddWindowClass, cd.ddWindowName)</span><br><span class="line">logger.debug(<span class="string">&quot;钉钉主窗口句柄：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(ddMainWindow))</span><br><span class="line"><span class="keyword">return</span> ddMainWindow</span><br><span class="line"><span class="comment"># 晓黑板登录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xhbLogin</span>():</span></span><br><span class="line"><span class="comment"># 如果登录模式不是账号登录，就切换到账号登录</span></span><br><span class="line">loginMode = pyautogui.locateOnScreen(<span class="string">&#x27;img/xiaoheiban/xhb_login_mode.png&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> loginMode == <span class="literal">None</span>:</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/xiaoheiban/xhb_login_mode_unselected.png&#x27;</span>, <span class="number">273</span>, <span class="number">436</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/xiaoheiban/xhb_username.png&#x27;</span>, <span class="number">80</span>, <span class="number">177</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">pyautogui.press(<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line">pyautogui.write(cd.xhbLoginPhone)</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/xiaoheiban/xhb_password.png&#x27;</span>, <span class="number">80</span>, <span class="number">232</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">pyautogui.press(<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line">pyautogui.write(getPassword(<span class="string">&#x27;xiaoheiban&#x27;</span>))</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/xiaoheiban/xhb_login.png&#x27;</span>, <span class="number">180</span>, <span class="number">316</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)</span><br><span class="line">xhbMainWindow = win32gui.FindWindow(cd.xhbMainWindowClass, cd.xhbMainWindowName)</span><br><span class="line">logger.debug(<span class="string">&quot;晓黑板主窗口句柄：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(xhbMainWindow))</span><br><span class="line"><span class="keyword">return</span> xhbMainWindow</span><br><span class="line"><span class="comment"># 根据不同的应用启动应用程序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getAppStart</span>(<span class="params">appName, mainWndClassName, mainWndName</span>):</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">通过参数appName，mainWndClassName和mainWndName，判断相应的应用是否已经启动:</span></span><br><span class="line"><span class="string">①如果已经启动，直接返回该应用的主窗口的句柄；</span></span><br><span class="line"><span class="string">②如果没有启动，根据传入的参数，启动该应用并返回该应用的主窗口的句柄；</span></span><br><span class="line"><span class="string">③如果打开失败，抛出异常；</span></span><br><span class="line"><span class="string">参数:</span></span><br><span class="line"><span class="string">- appName: 绝对路径表示的应用名称</span></span><br><span class="line"><span class="string">- mainWndClassName: 应用主窗口的类名(可以通过spy++获取)</span></span><br><span class="line"><span class="string">- mainWndName: 应用主窗口名称</span></span><br><span class="line"><span class="string">返回值：</span></span><br><span class="line"><span class="string">- mainWnd: 主窗口的句柄</span></span><br><span class="line"><span class="string">异常：</span></span><br><span class="line"><span class="string">- OpenAppException</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">logger.info(<span class="string">&quot;开始获取应用：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(appName))</span><br><span class="line"><span class="comment"># 获取应用主窗口</span></span><br><span class="line"><span class="comment"># 晓黑板和钉钉只要没有主动退出，下一次打开会用默认账号登录，</span></span><br><span class="line"><span class="comment"># 而微信每次打开都要单独登录</span></span><br><span class="line">mainWnd = win32gui.FindWindow(mainWndClassName, mainWndName)</span><br><span class="line"><span class="keyword">if</span> mainWnd == <span class="number">0</span>:   <span class="comment"># 主窗口没有被打开</span></span><br><span class="line">startApp(appName)    <span class="comment"># 启动应用</span></span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)   <span class="comment"># 等待主窗口显示</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;WeChat&#x27;</span> <span class="keyword">in</span> appName:</span><br><span class="line">logger.info(<span class="string">&#x27;打开微信登录...&#x27;</span>)</span><br><span class="line">loginWindow = win32gui.FindWindow(cd.wxLoginWindowClass, cd.wxLoginWindowName)</span><br><span class="line">moveWindow(loginWindow, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">mainWnd = wxLogin()</span><br><span class="line"><span class="keyword">elif</span> <span class="string">&#x27;DingDing&#x27;</span> <span class="keyword">in</span> appName:</span><br><span class="line">logger.info(<span class="string">&#x27;打开钉钉登录...&#x27;</span>)</span><br><span class="line">loginWindow = win32gui.FindWindow(cd.ddLoginWindowClass, cd.ddLoginWindowName)</span><br><span class="line">moveWindow(loginWindow, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">mainWnd = ddLogin()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">logger.info(<span class="string">&#x27;打开晓黑板登录...&#x27;</span>)</span><br><span class="line">loginWindow = win32gui.FindWindow(cd.xhbLoginWindowClass, cd.xhbLoginWindowName)</span><br><span class="line">moveWindow(loginWindow, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">mainWnd = xhbLogin()</span><br><span class="line">logger.debug(<span class="string">&quot;返回主窗口句柄：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(mainWnd))</span><br><span class="line"><span class="keyword">return</span> mainWnd</span><br><span class="line"><span class="comment"># 粘贴中文</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myPaste</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">pyperclip.copy(<span class="built_in">str</span>)</span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>,<span class="string">&#x27;v&#x27;</span>)</span><br><span class="line"><span class="comment"># 截图，文件保留为姓名+.jpg</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImage</span>(<span class="params">name</span>):</span></span><br><span class="line">logger.info(<span class="string">&quot;截图： &#123;&#125; 的随申码&quot;</span>.<span class="built_in">format</span>(name))</span><br><span class="line">im = pyautogui.screenshot(</span><br><span class="line">imageFilename=name+<span class="string">&quot;.jpg&quot;</span>,</span><br><span class="line">region=(cd.imgLeft, cd.imgTop, cd.imgRight, cd.imgBottom)</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 得到需要点击的位置</span></span><br><span class="line"><span class="comment"># Return: target_x,target_y</span></span><br><span class="line"><span class="comment"># x, y: 如果不能识别图片的话，使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getClickPosition</span>(<span class="params">pngName, _x, _y</span>):</span></span><br><span class="line">myLocation = pyautogui.locateOnScreen(pngName)</span><br><span class="line"><span class="keyword">if</span> myLocation != <span class="literal">None</span>:</span><br><span class="line">logger.debug(<span class="string">&quot;找到了图片 &#123;&#125; 的位置，返回图片中央坐标&quot;</span>.<span class="built_in">format</span>(pngName))</span><br><span class="line">btnPosition = pyautogui.center(myLocation)</span><br><span class="line">target_x, target_y = btnPosition</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">logger.debug(<span class="string">&quot;找不到图片 &#123;&#125; 的位置，使用指定的默认坐标&quot;</span>.<span class="built_in">format</span>(pngName))</span><br><span class="line">target_x = cd.left + _x</span><br><span class="line">target_y = cd.top + _y</span><br><span class="line"><span class="keyword">return</span> target_x, target_y</span><br><span class="line"><span class="comment"># 找省</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSheng</span>(<span class="params">pngName, cl_x, cl_y</span>):</span></span><br><span class="line"><span class="comment"># 省往下直到找到上海</span></span><br><span class="line">pyautogui.mouseDown(x=<span class="number">363</span>, y=<span class="number">246</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.mouseUp()</span><br><span class="line">pyautogui.scroll(-<span class="number">100</span>, x=<span class="number">350</span>, y=<span class="number">250</span>)</span><br><span class="line">target_x, target_y = getClickPosition(pngName, cl_x, cl_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 找市</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getShi</span>(<span class="params">pngName, cl_x, cl_y</span>):</span></span><br><span class="line"><span class="comment"># 开始找市, 市往下直到找到上海</span></span><br><span class="line">pyautogui.mouseDown(x=<span class="number">472</span>,y=<span class="number">246</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.mouseUp()</span><br><span class="line">pyautogui.scroll(-<span class="number">150</span>, x=<span class="number">450</span>, y=<span class="number">300</span>)</span><br><span class="line">target_x, target_y = getClickPosition(pngName, cl_x, cl_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 找区</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getQu</span>(<span class="params">pngName, cl_x, cl_y</span>):</span></span><br><span class="line"><span class="comment"># 开始找区, 区往下直到找到浦东新区</span></span><br><span class="line">pyautogui.mouseDown(x=<span class="number">585</span>,y=<span class="number">246</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.mouseUp()</span><br><span class="line">pyautogui.scroll(-<span class="number">150</span>, x=<span class="number">550</span>, y=<span class="number">300</span>)</span><br><span class="line">target_x, target_y = getClickPosition(pngName, cl_x, cl_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 钉钉上传文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploadFile</span>(<span class="params">name</span>):</span></span><br><span class="line">filename = name + <span class="string">&#x27;.jpg&#x27;</span></span><br><span class="line">dlgWindow = win32gui.FindWindow(<span class="string">&#x27;#32770&#x27;</span>, <span class="string">&#x27;打开&#x27;</span>)</span><br><span class="line">comboBoxEx32 = win32gui.FindWindowEx(dlgWindow, <span class="literal">None</span>, <span class="string">&#x27;ComboBoxEx32&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">comboBox = win32gui.FindWindowEx(comboBoxEx32, <span class="literal">None</span>, <span class="string">&#x27;ComboBox&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">edit = win32gui.FindWindowEx(comboBox, <span class="literal">None</span>, <span class="string">&#x27;Edit&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">win32gui.SendMessage(edit, win32con.WM_SETTEXT, <span class="literal">None</span>, filename)</span><br><span class="line">btnOpen = win32gui.FindWindowEx(dlgWindow, <span class="literal">None</span>, <span class="string">&#x27;Button&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">win32gui.PostMessage(btnOpen, win32con.WM_KEYDOWN, win32con.VK_RETURN, <span class="number">0</span>)</span><br><span class="line">win32gui.PostMessage(btnOpen, win32con.WM_KEYUP, win32con.VK_RETURN, <span class="number">0</span>)</span><br><span class="line">win32gui.PostMessage(dlgWindow, win32con.WM_CLOSE, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">confirmWindow = win32gui.FindWindow(<span class="string">&#x27;PopupFrame&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">left, top, right, bottom = win32gui.GetWindowRect(confirmWindow)</span><br><span class="line">btn_x = <span class="built_in">abs</span>(right - <span class="number">70</span>)</span><br><span class="line">btn_y = <span class="built_in">abs</span>(bottom - <span class="number">30</span>)</span><br><span class="line">pyautogui.click(btn_x, btn_y)</span><br><span class="line"><span class="comment">#win32gui.PostMessage(confirmWindow, win32con.WM_CLOSE, 0, 0)</span></span><br><span class="line"><span class="comment"># 晓黑板上传文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xhbUploadFile</span>(<span class="params">name</span>):</span></span><br><span class="line">filename = name + <span class="string">&#x27;.jpg&#x27;</span></span><br><span class="line">dlgWindow = win32gui.FindWindow(<span class="string">&#x27;#32770&#x27;</span>, <span class="string">&#x27;打开&#x27;</span>)</span><br><span class="line">comboBoxEx32 = win32gui.FindWindowEx(dlgWindow, <span class="literal">None</span>, <span class="string">&#x27;ComboBoxEx32&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">comboBox = win32gui.FindWindowEx(comboBoxEx32, <span class="literal">None</span>, <span class="string">&#x27;ComboBox&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">edit = win32gui.FindWindowEx(comboBox, <span class="literal">None</span>, <span class="string">&#x27;Edit&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">win32gui.SendMessage(edit, win32con.WM_SETTEXT, <span class="literal">None</span>, filename)</span><br><span class="line">btnOpen = win32gui.FindWindowEx(dlgWindow, <span class="literal">None</span>, <span class="string">&#x27;Button&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">win32gui.PostMessage(btnOpen, win32con.WM_KEYDOWN, win32con.VK_RETURN, <span class="number">0</span>)</span><br><span class="line">win32gui.PostMessage(btnOpen, win32con.WM_KEYUP, win32con.VK_RETURN, <span class="number">0</span>)</span><br><span class="line">win32gui.PostMessage(dlgWindow, win32con.WM_CLOSE, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 打开微信的随申办，得到每个人的随申码，并保存在当前目录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processWxSuishencode</span>(<span class="params">wxWindow</span>):</span></span><br><span class="line">logger.info(<span class="string">&quot;开始处理从微信获取随申码...&quot;</span>)</span><br><span class="line"><span class="comment"># 1.2如果窗口最小化了就把它恢复到正常</span></span><br><span class="line">win32gui.ShowWindow(wxWindow,win32con.SW_SHOWNORMAL)</span><br><span class="line"><span class="comment"># 1.3把窗口激活</span></span><br><span class="line">win32gui.SetForegroundWindow(wxWindow)</span><br><span class="line"><span class="comment"># 1.4 把微信窗口移动到（0，0），大小调整为800x600</span></span><br><span class="line">win32gui.MoveWindow(wxWindow, cd.left, cd.top, cd.width, cd.height, cd.repaint)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 2. 点击小程序面板</span></span><br><span class="line">target_x, target_y = getClickPosition(cd.wx_xcxPic, cd.microPg_x, cd.microPg_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 2. 点击随申办小程序</span></span><br><span class="line">target_x, target_y = getClickPosition(cd.wx_ssbPic, cd.ssb_x, cd.ssb_y)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line"><span class="comment"># 3.1 打开了随申办的新窗口</span></span><br><span class="line">logger.info(<span class="string">&quot;打开随申办小程序的窗口...&quot;</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)   <span class="comment"># 打开小程序还是有点耗时的</span></span><br><span class="line">ssbWindow=win32gui.FindWindow(cd.ssbWindowClass, cd.ssbWindowName)</span><br><span class="line">ssbLeft, ssbTop, ssbRight, ssbBottom = win32gui.GetWindowRect(ssbWindow)</span><br><span class="line"><span class="comment"># 3.2 如果窗口最小化了就把它恢复到正常</span></span><br><span class="line">win32gui.ShowWindow(ssbWindow,win32con.SW_SHOWNORMAL)</span><br><span class="line"><span class="comment"># 3.3 把窗口激活</span></span><br><span class="line">win32gui.SetForegroundWindow(ssbWindow)</span><br><span class="line"><span class="comment"># 3.4 把随申办窗口移动到（0，0）</span></span><br><span class="line">win32gui.MoveWindow(ssbWindow, cd.left, cd.top, <span class="built_in">abs</span>(ssbRight - ssbLeft), <span class="built_in">abs</span>(ssbBottom - ssbTop), cd.repaint)</span><br><span class="line"><span class="comment"># 3.5 打开随申码</span></span><br><span class="line">logger.info(<span class="string">&quot;打开随申码...&quot;</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)   <span class="comment"># 打开小程序还是有点耗时的，以后可以升级成用文字识别，能识别出“随申码”在跳出循环</span></span><br><span class="line">target_x = cd.left + cd.ssm_x</span><br><span class="line">target_y = cd.top + cd.ssm_y</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)  <span class="comment"># 打开图形（二维码）比较慢）</span></span><br><span class="line"><span class="comment"># 截图处理</span></span><br><span class="line">getImage(cd.familyList[-<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 3.6 打开亲属随申码主链接，进入亲属随申码列表，第一个是本人</span></span><br><span class="line">logger.info(<span class="string">&quot;打开亲属随申码清单...&quot;</span>)</span><br><span class="line">target_x = cd.left + cd.ssm_main_link_x</span><br><span class="line">target_y = cd.top + cd.ssm_main_link_y</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 3.7 循环处理亲属随申码</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cd.familyList) - <span class="number">1</span>):</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">target_x = cd.left + cd.ssm_family_x</span><br><span class="line">target_y = cd.top + cd.ssm_family_start_y + cd.ssm_family_interval_y * i</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)</span><br><span class="line">getImage(cd.familyList[i])</span><br><span class="line"><span class="comment"># 返回亲属随申码列表</span></span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">target_x = cd.left + cd.ssm_main_link_x</span><br><span class="line">target_y = cd.top + cd.ssm_main_link_y + cd.ssm_family_adjust_y</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line"><span class="comment"># 截图完成后，关闭随申办等窗口，微信窗口保留</span></span><br><span class="line">logger.info(<span class="string">&quot;关闭【随申码】和【随申办】窗口...&quot;</span>)</span><br><span class="line">win32gui.PostMessage(ssbWindow, win32con.WM_CLOSE, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">win32gui.PostMessage(wxWindow, win32con.WM_CLOSE, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment"># 上传到钉钉</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processDd</span>(<span class="params">ddWindow</span>):</span></span><br><span class="line"><span class="comment"># 1.  处理钉钉窗口</span></span><br><span class="line"><span class="comment"># 1.1 找到钉钉的窗口</span></span><br><span class="line">ddWindow = win32gui.FindWindow(cd.ddWindowClass, cd.ddWindowName)</span><br><span class="line"><span class="comment"># 1.2 如果窗口最小化了就把它恢复到正常</span></span><br><span class="line">win32gui.ShowWindow(ddWindow,win32con.SW_SHOWNORMAL)</span><br><span class="line"><span class="comment"># 1.3 把窗口激活</span></span><br><span class="line">win32gui.SetForegroundWindow(ddWindow)</span><br><span class="line"><span class="comment"># 1.4 把钉钉窗口移动到（0，0）</span></span><br><span class="line">win32gui.MoveWindow(ddWindow, cd.left, cd.top, cd.ddWidth, cd.ddHeight, cd.repaint)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 1.5 打开工作窗口</span></span><br><span class="line">logger.info(<span class="string">&quot;找到工作台标签，打开工作窗口&quot;</span>)</span><br><span class="line">target_x = cd.left + <span class="number">30</span></span><br><span class="line">target_y = cd.top + <span class="number">220</span></span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 1.6 选择孙桥大四班</span></span><br><span class="line"><span class="comment">#     点击选项</span></span><br><span class="line">logger.info(<span class="string">&quot;找到组织-班级&quot;</span>)</span><br><span class="line">myLocation = pyautogui.locateOnScreen(<span class="string">&#x27;img/dingding/dd_orgselected.png&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> myLocation == <span class="literal">None</span>:</span><br><span class="line">logger.debug(<span class="string">&quot;找不到表明【组织-班级】的图片&quot;</span>)</span><br><span class="line">target_x = cd.left + <span class="number">500</span></span><br><span class="line">target_y = cd.top + <span class="number">53</span></span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment">#    点击选中孙桥大四班</span></span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/dingding/dd_org.png&#x27;</span>, <span class="number">500</span>, <span class="number">202</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 1.7 返回OA工作台首页</span></span><br><span class="line">logger.info(<span class="string">&quot;返回OA工作台首页&quot;</span>)</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/dingding/dd_oahome.png&#x27;</span>, <span class="number">140</span>, <span class="number">93</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 刷新OA工作台首页</span></span><br><span class="line">logger.info(<span class="string">&quot;刷新OA工作台首页&quot;</span>)</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/dingding/dd_refresh.png&#x27;</span>, <span class="number">187</span>, <span class="number">52</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)</span><br><span class="line"><span class="comment"># 1.8 找每日填表</span></span><br><span class="line"><span class="comment">#     鼠标下滚</span></span><br><span class="line">logger.info(<span class="string">&quot;寻找【每日填表】&quot;</span>)</span><br><span class="line">pyautogui.moveTo(<span class="number">150</span>, <span class="number">150</span>)</span><br><span class="line">pyautogui.scroll(-<span class="number">400</span>)</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/dingding/dd_mrsb.png&#x27;</span>, <span class="number">550</span>, <span class="number">225</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)</span><br><span class="line"><span class="comment"># 1.9 找到每天要填的表格</span></span><br><span class="line">logger.info(<span class="string">&quot;寻找每日填表中【每天要填的表格链接】&quot;</span>)</span><br><span class="line">target_x = cd.left + <span class="number">273</span></span><br><span class="line"><span class="comment">#target_x = cd.left + 722</span></span><br><span class="line">target_y = cd.top + <span class="number">584</span></span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime * cd.generalTimeAdjust)</span><br><span class="line"><span class="comment"># 2.0 处理填表</span></span><br><span class="line">logger.info(<span class="string">&quot;开始处理表格，进行自动填表&quot;</span>)</span><br><span class="line"><span class="comment">#pyautogui.moveTo(150, 150)</span></span><br><span class="line">pyautogui.scroll(-<span class="number">250</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 输入当前日期</span></span><br><span class="line">pyautogui.click(<span class="number">240</span>, <span class="number">246</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/dingding/dd_today.png&#x27;</span>, <span class="number">346</span>, <span class="number">548</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 输入体温</span></span><br><span class="line">strTemp = <span class="string">&#x27;36.7&#x27;</span></span><br><span class="line">pyautogui.click(<span class="number">250</span>, <span class="number">350</span>)</span><br><span class="line">pyautogui.press(<span class="string">&#x27;backspace&#x27;</span>, presses=<span class="number">5</span>)</span><br><span class="line">pyautogui.write(strTemp)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 选择健康</span></span><br><span class="line">pyautogui.click(<span class="number">214</span>,<span class="number">461</span>)</span><br><span class="line"><span class="comment"># 选择孩子当前所在城市</span></span><br><span class="line">pyautogui.scroll(-<span class="number">250</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 激活地区输入框</span></span><br><span class="line">pyautogui.click(<span class="number">269</span>, <span class="number">214</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 找省</span></span><br><span class="line">myLocSheng= pyautogui.locateOnScreen(<span class="string">&#x27;img/dingding/Sheng_SH_selected.png&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> myLocSheng == <span class="literal">None</span>:</span><br><span class="line">logger.debug(<span class="string">&quot;找不到可以定位的省的图片&quot;</span>)</span><br><span class="line">getSheng(<span class="string">&#x27;img/dingding/Sheng_SH.png&#x27;</span>, <span class="number">235</span>, <span class="number">338</span>)</span><br><span class="line">getShi(<span class="string">&#x27;img/dingding/Shi_SH.png&#x27;</span>, <span class="number">420</span>, <span class="number">254</span>)</span><br><span class="line">getQu(<span class="string">&#x27;img/dingding/Qu_PD.png&#x27;</span>, <span class="number">539</span>, <span class="number">402</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">pyautogui.click(<span class="number">269</span>, <span class="number">214</span>)</span><br><span class="line"><span class="comment">#     # 找市</span></span><br><span class="line"><span class="comment">#     myLocShi = pyautogui.locateOnScreen(&#x27;img/Shi_SH_selected.png&#x27;)</span></span><br><span class="line"><span class="comment">#     if myLocShi == None:</span></span><br><span class="line"><span class="comment">#         print(&#x27;can not find Shi: &#x27; + &#x27;Shi_SH_selected.png&#x27;)</span></span><br><span class="line"><span class="comment">#         getShi(&#x27;img/dingding/Shi_SH.png&#x27;, 420, 254)</span></span><br><span class="line"><span class="comment">#         getQu(&#x27;img/dingding/Qu_PD.png&#x27;, 539, 402)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     # 找区</span></span><br><span class="line"><span class="comment">#     myLocQu = pyautogui.locateOnScreen(&#x27;img/dingding/Qu_PD_selected.png&#x27;)</span></span><br><span class="line"><span class="comment">#     if myLocQu == None:</span></span><br><span class="line"><span class="comment">#         print(&#x27;can not find Qu: &#x27; + &#x27;Qu_PD_selected.png&#x27;)</span></span><br><span class="line"><span class="comment"># 孩子及家庭成员是否曾到过或居住在武汉市及周边地区，或境内其他有病例报告的社区</span></span><br><span class="line">pyautogui.click(<span class="number">214</span>, <span class="number">352</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 孩子及家庭成员最近14天，是否前往疫区或国/境外旅行或居住史</span></span><br><span class="line">pyautogui.click(<span class="number">214</span>, <span class="number">494</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.scroll(-<span class="number">250</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 孩子最近14天，是否接触来自境外的人员或来自疫情严重地区的人员</span></span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.click(<span class="number">214</span>, <span class="number">220</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.scroll(-<span class="number">80</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 幼儿随申码</span></span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.moveTo(<span class="number">231</span>, <span class="number">245</span>)</span><br><span class="line">pyautogui.click()</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">uploadFile(cd.ddMain)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.scroll(-<span class="number">50</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">familyList = cd.familyList[:]</span><br><span class="line">familyList.remove(cd.ddMain)</span><br><span class="line"><span class="comment"># 同住人随申码，同住最多4人，必填2人</span></span><br><span class="line">cl_y = <span class="number">323</span></span><br><span class="line"><span class="keyword">for</span> personName <span class="keyword">in</span> familyList:</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.moveTo(<span class="number">231</span>, cl_y)</span><br><span class="line">pyautogui.click()</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">uploadFile(personName)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.scroll(-<span class="number">50</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">cl_y += <span class="number">67</span></span><br><span class="line"><span class="comment"># 最终提交</span></span><br><span class="line">logger.info(<span class="string">&quot;最终提交表格&quot;</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.scroll(-<span class="number">80</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/dingding/btnSubmit.png&#x27;</span>, <span class="number">273</span>, <span class="number">605</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line"><span class="comment"># 2.1 关闭填表</span></span><br><span class="line">logger.info(<span class="string">&quot;关闭表格选项卡&quot;</span>)</span><br><span class="line">target_x = cd.left + <span class="number">501</span></span><br><span class="line">target_y = cd.top + <span class="number">90</span></span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 2.2 关闭每日填表</span></span><br><span class="line">logger.info(<span class="string">&quot;关闭每日填表选项卡&quot;</span>)</span><br><span class="line">target_x = cd.left + <span class="number">358</span></span><br><span class="line">target_y = cd.top + <span class="number">90</span></span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processXHB</span>(<span class="params">xhbMainWindow</span>):</span></span><br><span class="line">win32gui.SetForegroundWindow(xhbMainWindow)</span><br><span class="line">left, top, right, bottom = win32gui.GetWindowRect(xhbMainWindow)</span><br><span class="line">win32gui.MoveWindow(xhbMainWindow, cd.left, cd.top, <span class="built_in">abs</span>(right-left), <span class="built_in">abs</span>(bottom-top), cd.repaint)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 把屏幕回滚到最顶端，必定有&quot;今天的消息“</span></span><br><span class="line">logger.info(<span class="string">&quot;回滚消息屏幕到最顶端&quot;</span>)</span><br><span class="line">pyautogui.moveTo(<span class="number">400</span>,<span class="number">400</span>)</span><br><span class="line">found = <span class="literal">False</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> found:</span><br><span class="line">xhbMainScreen = pyautogui.locateOnScreen(<span class="string">&#x27;img/xiaoheiban/xhb_main_screen_title.png&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> xhbMainScreen != <span class="literal">None</span>:</span><br><span class="line">found = <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">pyautogui.scroll(<span class="number">400</span>)</span><br><span class="line"><span class="comment"># 下滚屏幕直到找到需要提交的调查表</span></span><br><span class="line">logger.info(<span class="string">&quot;下滚消息屏幕找到调查表入口&quot;</span>)</span><br><span class="line">found = <span class="literal">False</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> found:</span><br><span class="line">xhbMrsbLink = pyautogui.locateOnScreen(<span class="string">&#x27;img/xiaoheiban/xhb_mrsb_submit.png&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> xhbMrsbLink != <span class="literal">None</span>:</span><br><span class="line">found = <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">pyautogui.scroll(-<span class="number">400</span>)</span><br><span class="line"><span class="comment"># 定位到“学校进校人员健康排摸登记表”</span></span><br><span class="line">btnPosition = pyautogui.center(xhbMrsbLink)</span><br><span class="line">target_x, target_y = btnPosition</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 1. 输入学号</span></span><br><span class="line">pyautogui.click(<span class="number">500</span>, <span class="number">283</span>)</span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">pyautogui.press(<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line">pyautogui.write(<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 2. 输入姓名</span></span><br><span class="line">pyautogui.click(<span class="number">500</span>, <span class="number">480</span>)</span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">pyautogui.press(<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line">myPaste(cd.xhbMain)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 滚屏</span></span><br><span class="line">pyautogui.scroll(-<span class="number">485</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 3. 选择健康码</span></span><br><span class="line">pyautogui.click(<span class="number">483</span>, <span class="number">270</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 滚屏</span></span><br><span class="line">pyautogui.scroll(-<span class="number">325</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 4. 健康码截图</span></span><br><span class="line">pyautogui.click(<span class="number">512</span>, <span class="number">296</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">xhbUploadFile(cd.xhbMain)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 5. 体温</span></span><br><span class="line">pyautogui.click(<span class="number">500</span>, <span class="number">500</span>)</span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">pyautogui.press(<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line">myPaste(<span class="string">&#x27;36.5&#x27;</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 滚屏</span></span><br><span class="line">pyautogui.scroll(-<span class="number">510</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 循环把同住人的信息全部更新</span></span><br><span class="line">familyList = cd.familyList[:]</span><br><span class="line">familyList.remove(cd.xhbMain)</span><br><span class="line">cl_y = <span class="number">269</span></span><br><span class="line"><span class="keyword">for</span> personName <span class="keyword">in</span> familyList:</span><br><span class="line"><span class="comment"># 6. 同住人姓名</span></span><br><span class="line">pyautogui.click(<span class="number">500</span>, cl_y)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">pyautogui.press(<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line">myPaste(personName)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 7. 同住人健康码</span></span><br><span class="line">pyautogui.click(<span class="number">483</span>, <span class="number">458</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 滚屏</span></span><br><span class="line">pyautogui.scroll(-<span class="number">565</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 8. 同住人健康码截图</span></span><br><span class="line">pyautogui.click(<span class="number">511</span>, <span class="number">290</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line">xhbUploadFile(personName)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 9. 同住人体温</span></span><br><span class="line">pyautogui.click(<span class="number">500</span>, <span class="number">500</span>)</span><br><span class="line">pyautogui.hotkey(<span class="string">&#x27;ctrl&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">pyautogui.press(<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line">myPaste(<span class="string">&#x27;36.7&#x27;</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 滚屏</span></span><br><span class="line">pyautogui.scroll(-<span class="number">510</span>)</span><br><span class="line">time.sleep(cd.generalWaitTime)</span><br><span class="line"><span class="comment"># 点击提交</span></span><br><span class="line">logger.info(<span class="string">&quot;提交调查表&quot;</span>)</span><br><span class="line">target_x, target_y = getClickPosition(<span class="string">&#x27;img/xiaoheiban/xhb_mrsb_final_submit.png&#x27;</span>, <span class="number">846</span>, <span class="number">594</span>)</span><br><span class="line">pyautogui.click(target_x, target_y)</span><br><span class="line"><span class="comment"># 回到消息窗口</span></span><br><span class="line">pyautogui.click(<span class="number">50</span>, <span class="number">170</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"><span class="comment"># 日志</span></span><br><span class="line">logger = getLogger(cd.basicLogFileName, cd.logFileName, cd.logLevel, cd.logMode)</span><br><span class="line"><span class="comment"># 启动并登录微信</span></span><br><span class="line">wxMainWindow = getAppStart(cd.wxAppName, cd.wxWindowClass, cd.wxWindowName)</span><br><span class="line"><span class="comment"># 获取健康码</span></span><br><span class="line">processWxSuishencode(wxMainWindow)</span><br><span class="line"><span class="comment"># 启动并登录钉钉</span></span><br><span class="line">ddMainWindow = getAppStart(cd.ddAppName, cd.ddWindowClass,  cd.ddWindowName)</span><br><span class="line"><span class="comment"># 钉钉完成提交</span></span><br><span class="line">processDd(ddMainWindow)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 启动晓黑板并登录晓黑板</span></span><br><span class="line">xhbMainWindow = getAppStart(cd.xhbAppName, cd.xhbMainWindowClass,  cd.xhbMainWindowName)</span><br><span class="line"><span class="comment"># 晓黑板完成提交</span></span><br><span class="line">processXHB(xhbMainWindow)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;核心代码3大块：&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="学习教育" scheme="https://www.liuyong.online/categories/learning/"/>
    
    
    <category term="Python" scheme="https://www.liuyong.online/tags/Python/"/>
    
    <category term="自动化填表" scheme="https://www.liuyong.online/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A1%AB%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>②用python的shelve包持久化存储密码</title>
    <link href="https://www.liuyong.online/2020/09/25/%E2%91%A1%E7%94%A8python%E7%9A%84shelve%E5%8C%85%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8%E5%AF%86%E7%A0%81/"/>
    <id>https://www.liuyong.online/2020/09/25/%E2%91%A1%E7%94%A8python%E7%9A%84shelve%E5%8C%85%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8%E5%AF%86%E7%A0%81/</id>
    <published>2020-09-25T13:25:00.000Z</published>
    <updated>2022-10-27T12:22:28.996Z</updated>
    
    <content type="html"><![CDATA[<h4 id="存储密码"><a href="#存储密码" class="headerlink" title="存储密码"></a>存储密码</h4><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shelve</span><br><span class="line"><span class="keyword">import</span> win32api</span><br><span class="line"><span class="keyword">import</span> win32con</span><br><span class="line"><span class="keyword">with</span> shelve.<span class="built_in">open</span>(<span class="string">&#x27;password&#x27;</span>) <span class="keyword">as</span> db:</span><br><span class="line">db[<span class="string">&#x27;dingding&#x27;</span>] = <span class="string">&#x27;Your_dingding_Password&#x27;</span></span><br><span class="line">db[<span class="string">&#x27;xiaoheiban&#x27;</span>] = <span class="string">&#x27;Your_xiaoheiban_Password&#x27;</span></span><br><span class="line">win32api.SetFileAttributes(<span class="string">&#x27;password.dir&#x27;</span>, win32con.FILE_ATTRIBUTE_HIDDEN)</span><br><span class="line">win32api.SetFileAttributes(<span class="string">&#x27;password.bak&#x27;</span>, win32con.FILE_ATTRIBUTE_HIDDEN)</span><br><span class="line">win32api.SetFileAttributes(<span class="string">&#x27;password.dat&#x27;</span>, win32con.FILE_ATTRIBUTE_HIDDEN)</span><br></pre></td></tr></table></figure><h4 id="读取密码"><a href="#读取密码" class="headerlink" title="读取密码"></a>读取密码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获得保存的密码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPassword</span>(<span class="params">key</span>):</span></span><br><span class="line">db = shelve.<span class="built_in">open</span>(cd.passwordFile)</span><br><span class="line">retValue = db[key]</span><br><span class="line">db.close()</span><br><span class="line"><span class="keyword">return</span> retValue</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;存储密码&quot;&gt;&lt;a href=&quot;#存储密码&quot; class=&quot;headerlink&quot; title=&quot;存储密码&quot;&gt;&lt;/a&gt;存储密码&lt;/h4&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
  </entry>
  
  <entry>
    <title>③用configparser解析配置文件</title>
    <link href="https://www.liuyong.online/2020/09/25/%E2%91%A2%E7%94%A8configparser%E8%A7%A3%E6%9E%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>https://www.liuyong.online/2020/09/25/%E2%91%A2%E7%94%A8configparser%E8%A7%A3%E6%9E%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</id>
    <published>2020-09-25T13:25:00.000Z</published>
    <updated>2022-10-27T12:22:28.972Z</updated>
    
    <content type="html"><![CDATA[<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line">[family]</span><br><span class="line">; 家族人员名单，亲属顺序根据微信’随申码‘的顺序，本人在最后,根据钉钉的设置，最多5个人</span><br><span class="line">familyList&#x3D;爸爸, 大宝, 二宝, 妈妈</span><br><span class="line">ddMain&#x3D;二宝</span><br><span class="line">xhbMain&#x3D;大宝</span><br><span class="line">[time]</span><br><span class="line">; 定义等待间隔时间</span><br><span class="line">pyautoguiPAUSE &#x3D; 2</span><br><span class="line">generalWaitTime &#x3D; 2</span><br><span class="line">generalWaitTime_speed_high &#x3D; 0.2</span><br><span class="line">generalTimeAdjust &#x3D; 3</span><br><span class="line">generalTimeAdjust_speed_high &#x3D; 1</span><br><span class="line">generalTimeAdjust_speed_low &#x3D;  5</span><br><span class="line">[log]</span><br><span class="line">; 定义日志参数，0表示控制台输出，1表示文件输出，2表示同时输出</span><br><span class="line">basicLogFileName &#x3D; logger.log</span><br><span class="line">logFileName &#x3D; log.txt</span><br><span class="line">logMode &#x3D; 2</span><br><span class="line">level &#x3D; DEBUG</span><br><span class="line">[password]</span><br><span class="line">passwordFile &#x3D; password</span><br><span class="line">[weixin-ssm]</span><br><span class="line">; 微信随申码相关的控制参数</span><br><span class="line">; 定义微信安装位置</span><br><span class="line">wxAppName &#x3D; C:\\Program Files (x86)\\Tencent\\WeChat\\WeChat.exe</span><br><span class="line">; 定义微信登录窗口</span><br><span class="line">wxLoginWindowClass &#x3D; WeChatLoginWndForPC</span><br><span class="line">wxLoginWindowName &#x3D; 登录</span><br><span class="line">wxLoginBtnPic &#x3D; img&#x2F;weixin&#x2F;wxLogin.png</span><br><span class="line">; 定义微信主窗口</span><br><span class="line">wxWindowClass &#x3D; WeChatMainWndForPC</span><br><span class="line">wxWindowName &#x3D; 微信</span><br><span class="line">; 定义微信小程序面板窗口</span><br><span class="line">wxMicroPgWindowClass &#x3D; AppletPanelWnd</span><br><span class="line">wxMicroPgWindowName &#x3D;</span><br><span class="line">wx_xcxPic &#x3D; img&#x2F;weixin&#x2F;wx_xcx.png</span><br><span class="line">; 定义随申办的窗口</span><br><span class="line">ssbWindowClass&#x3D;Chrome_WidgetWin_0</span><br><span class="line">ssbWindowName&#x3D;随申办</span><br><span class="line">wx_ssbPic &#x3D; img&#x2F;weixin&#x2F;wx_ssb.png</span><br><span class="line">; 定义一些鼠标移动的相对常量</span><br><span class="line">; 0. 微信登录窗口的登录按钮位置</span><br><span class="line">wxLoginBtn_x &#x3D; 138</span><br><span class="line">wxLoginBtn_y &#x3D; 279</span><br><span class="line">; 1. 微信主窗口位置</span><br><span class="line">left &#x3D; 0</span><br><span class="line">top &#x3D; 0</span><br><span class="line">width &#x3D; 800</span><br><span class="line">height &#x3D; 600</span><br><span class="line">repaint &#x3D; 1</span><br><span class="line">; 2. 搜索框</span><br><span class="line">searchBox_x &#x3D; 150</span><br><span class="line">searchBox_y &#x3D; 37</span><br><span class="line">; 3. 小程序面板</span><br><span class="line">microPg_x &#x3D; 30</span><br><span class="line">microPg_y &#x3D; 490</span><br><span class="line">; 4. 查找小程序</span><br><span class="line">s_microPg_x &#x3D; 300</span><br><span class="line">s_microPg_y &#x3D; 450</span><br><span class="line">; 5. 随申办定位</span><br><span class="line">ssb_x &#x3D; 115</span><br><span class="line">ssb_y &#x3D; 320</span><br><span class="line">; 6. 随申码定位</span><br><span class="line">ssm_x &#x3D; 235</span><br><span class="line">ssm_y &#x3D; 280</span><br><span class="line">; 7. 亲属随申码主链接</span><br><span class="line">ssm_main_link_x &#x3D; 347</span><br><span class="line">ssm_main_link_y &#x3D; 191</span><br><span class="line">; 8. 亲属随申码定位（x不变，y从310开始，以93位间隔增长）</span><br><span class="line">ssm_family_x &#x3D; 347</span><br><span class="line">ssm_family_start_y &#x3D; 310</span><br><span class="line">ssm_family_interval_y &#x3D; 93</span><br><span class="line">; 亲属随申码返回的时候需要调整位置</span><br><span class="line">ssm_family_adjust_y &#x3D; 10</span><br><span class="line">; 定义搜索内容</span><br><span class="line">wxSearch &#x3D;</span><br><span class="line">; 截图区域</span><br><span class="line">imgLeft &#x3D; 5</span><br><span class="line">imgTop &#x3D; 62</span><br><span class="line">imgRight &#x3D; 405</span><br><span class="line">imgBottom &#x3D; 675</span><br><span class="line">[Dingding]</span><br><span class="line">; 钉钉相关控制参数</span><br><span class="line">; 定义钉钉安装位置</span><br><span class="line">ddAppName &#x3D; C:\\Program Files (x86)\\DingDing\\DingtalkLauncher.exe</span><br><span class="line">ddLoginWindowClass &#x3D; StandardFrame_Loging</span><br><span class="line">ddLoginWindowName &#x3D; 钉钉</span><br><span class="line">ddPasswordLoginPic &#x3D; img&#x2F;dingding&#x2F;ddPasswordLogin.png</span><br><span class="line">ddPasswordLogin_x &#x3D; 210</span><br><span class="line">ddPasswordLogin_y &#x3D; 70</span><br><span class="line">ddInputPassword &#x3D; img&#x2F;dingding&#x2F;inputPassword.png</span><br><span class="line">ddInputPassword_x &#x3D; 200</span><br><span class="line">ddInputPassword_y &#x3D; 316</span><br><span class="line">ddInputPhoneNumber &#x3D; img&#x2F;dingding&#x2F;inputPhoneNumber.png</span><br><span class="line">ddInputPhoneNumber_x &#x3D; 215</span><br><span class="line">ddInputPhoneNumber_y &#x3D; 272</span><br><span class="line">ddLoginBtn &#x3D; img&#x2F;dingding&#x2F;loginBtn.png</span><br><span class="line">ddLoginBtn_x &#x3D; 257</span><br><span class="line">ddLoginBtn_y &#x3D; 316</span><br><span class="line">ddLoginPhone &#x3D; 钉钉登录手机号</span><br><span class="line">; 定义钉钉主窗口</span><br><span class="line">ddWindowClass &#x3D; StandardFrame_DingTalk</span><br><span class="line">ddWindowName &#x3D; 钉钉</span><br><span class="line">ddWidth &#x3D; 960</span><br><span class="line">ddHeight &#x3D; 640</span><br><span class="line">; 获得省的列表并取得相应的省</span><br><span class="line">sheng_pullPosition_x &#x3D; 363</span><br><span class="line">sheng_pullPosition_y &#x3D; 246</span><br><span class="line">sheng_scroll &#x3D; -100</span><br><span class="line">sheng_scroll_from_x &#x3D; 350</span><br><span class="line">sheng_scroll_from_y &#x3D; 250</span><br><span class="line">; 获得市的列表并取得相应的市</span><br><span class="line">shi_pullPosition_x &#x3D; 472</span><br><span class="line">shi_pullPosition_y &#x3D; 246</span><br><span class="line">shi_scroll &#x3D; -150</span><br><span class="line">shi_scroll_from_x &#x3D; 450</span><br><span class="line">shi_scroll_from_y &#x3D; 300</span><br><span class="line">; 获得区的列表并取得相应的区</span><br><span class="line">qu_pullPosition_x &#x3D; 585</span><br><span class="line">qu_pullPosition_y &#x3D; 246</span><br><span class="line">qu_scroll &#x3D; -150</span><br><span class="line">qu_scroll_from_x &#x3D; 550</span><br><span class="line">qu_scroll_from_y &#x3D; 300</span><br><span class="line">; 上传随申码确认按钮距离边界的差值</span><br><span class="line">uploadConfirmBtn_x &#x3D; 70</span><br><span class="line">uploadConfirmBtn_y &#x3D; 30</span><br><span class="line">; 工作窗口图标</span><br><span class="line">workWindowSign_x &#x3D; 30</span><br><span class="line">workWindowSign_y &#x3D; 220</span><br><span class="line">; 选择工作单位</span><br><span class="line">workOrgSelect_x &#x3D; 500</span><br><span class="line">workOrgSelect_y &#x3D; 53</span><br><span class="line">confirmWorkOrg_x &#x3D; 500</span><br><span class="line">confirmWorkOrg_y &#x3D; 202</span><br><span class="line">; OA工作台首页</span><br><span class="line">oaHomepage_x &#x3D; 140</span><br><span class="line">oaHomepage_y &#x3D; 93</span><br><span class="line">oaRefresh_x &#x3D; 187</span><br><span class="line">oaRefresh_y &#x3D; 52</span><br><span class="line">; 每日填报</span><br><span class="line">mrtb_scroll_from_x &#x3D; 150</span><br><span class="line">mrtb_scroll_from_y &#x3D; 150</span><br><span class="line">mrtb_scroll &#x3D; -400</span><br><span class="line">mrtb_default_x &#x3D; 550</span><br><span class="line">mrtb_default_y &#x3D; 225</span><br><span class="line">; 寻找表格</span><br><span class="line">mrtb_table_x &#x3D; 273</span><br><span class="line">mrtb_table_y &#x3D; 584</span><br><span class="line">; 处理表格</span><br><span class="line">table_scroll &#x3D; -250</span><br><span class="line">table_uploade_scroll &#x3D; -50</span><br><span class="line">table_upload_scroll_adjust &#x3D; 67</span><br><span class="line">table_small_scroll &#x3D; -80</span><br><span class="line">; 日期</span><br><span class="line">currentDate_x &#x3D; 240</span><br><span class="line">currentDate_y &#x3D; 246</span><br><span class="line">todayBtn_x &#x3D; 346</span><br><span class="line">todayBtn_y &#x3D; 548</span><br><span class="line">; 体温</span><br><span class="line">temp &#x3D; 36.7</span><br><span class="line">temp_x &#x3D; 250</span><br><span class="line">temp_y &#x3D; 350</span><br><span class="line">; 健康</span><br><span class="line">jiankang_x &#x3D; 214</span><br><span class="line">jiankang_y &#x3D; 461</span><br><span class="line">; 城市</span><br><span class="line">city_x &#x3D; 269</span><br><span class="line">city_y &#x3D; 214</span><br><span class="line">sheng_default_x &#x3D; 235</span><br><span class="line">sheng_default_y &#x3D; 338</span><br><span class="line">shi_default_x &#x3D; 420</span><br><span class="line">shi_default_y &#x3D; 254</span><br><span class="line">qu_default_x &#x3D; 539</span><br><span class="line">qu_default_y &#x3D; 402</span><br><span class="line">; 社区</span><br><span class="line">shequ_x &#x3D; 214</span><br><span class="line">shequ_y &#x3D; 352</span><br><span class="line">; 旅行</span><br><span class="line">lvxing_x &#x3D; 214</span><br><span class="line">lvxing_y &#x3D; 494</span><br><span class="line">; 接触</span><br><span class="line">jiechu_x &#x3D; 214</span><br><span class="line">jiechu_y &#x3D; 220</span><br><span class="line">; 图片上传</span><br><span class="line">ddMain_pic_x &#x3D; 231</span><br><span class="line">ddMain_pic_y &#x3D; 245</span><br><span class="line">family_start_x &#x3D; 231</span><br><span class="line">family_start_y &#x3D; 323</span><br><span class="line">; 最终提交</span><br><span class="line">submit_x &#x3D; 273</span><br><span class="line">submit_y &#x3D; 605</span><br><span class="line">; 关闭填表</span><br><span class="line">close_table_x &#x3D; 501</span><br><span class="line">close_table_y &#x3D; 90</span><br><span class="line">; 关闭每日填表</span><br><span class="line">close_mrtb_x &#x3D; 358</span><br><span class="line">close_mrtb_y &#x3D; 90</span><br><span class="line">[xiaoheiban]</span><br><span class="line">; 定义晓黑板相关的控制参数</span><br><span class="line">; 晓黑板的安装绝对路径</span><br><span class="line">xhbAppName &#x3D; C:\\Program Files (x86)\\xiaoheiban\\晓黑板.exe</span><br><span class="line">xhbLoginWindowClass &#x3D; Chrome_WidgetWin_1</span><br><span class="line">xhbLoginWindowName &#x3D; 晓黑板登录</span><br><span class="line">xhbMainWindowClass &#x3D; Chrome_WidgetWin_1</span><br><span class="line">xhbMainWindowName &#x3D; 消息&#x2F;全部</span><br><span class="line">xhbLoginPhone &#x3D; 哓黑板登录手机号</span><br></pre></td></tr></table></figure><h4 id="解析程序"><a href="#解析程序" class="headerlink" title="解析程序"></a>解析程序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> logging <span class="keyword">import</span> handlers</span><br><span class="line">configFilename=<span class="string">&quot;suishencode.ini&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConfigData</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">config = configparser.ConfigParser()</span><br><span class="line">config.read(configFilename, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 全局参数定义开始                  #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 定义家属列表</span></span><br><span class="line">familyList = config.get(<span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;familyList&#x27;</span>).strip().split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">ddMain = config.get(<span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;ddMain&#x27;</span>).strip()</span><br><span class="line">xhbMain = config.get(<span class="string">&#x27;family&#x27;</span>, <span class="string">&#x27;xhbMain&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 定义等待间隔时间</span></span><br><span class="line">pyautoguiPAUSE = config.getint(<span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;pyautoguiPAUSE&#x27;</span>)</span><br><span class="line">generalWaitTime_speed_high = config.getfloat(<span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;generalWaitTime_speed_high&#x27;</span>)</span><br><span class="line">generalWaitTime = config.getint(<span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;generalWaitTime&#x27;</span>)</span><br><span class="line">generalTimeAdjust = config.getint(<span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;generalTimeAdjust&#x27;</span>)</span><br><span class="line">generalTimeAdjust_speed_high = config.getint(<span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;generalTimeAdjust_speed_high&#x27;</span>)</span><br><span class="line">generalTimeAdjust_speed_low = config.getint(<span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;generalTimeAdjust_speed_low&#x27;</span>)</span><br><span class="line"><span class="comment"># 日志参数</span></span><br><span class="line">basicLogFileName = config.get(<span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;basicLogFileName&#x27;</span>)</span><br><span class="line">logFileName = config.get(<span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;logFileName&#x27;</span>)</span><br><span class="line">logMode = config.getint(<span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;logMode&#x27;</span>)</span><br><span class="line">logLevelDefinition = &#123;<span class="string">&#x27;DEBUG&#x27;</span>: <span class="number">10</span>,</span><br><span class="line"><span class="string">&#x27;INFO&#x27;</span>: <span class="number">20</span>,</span><br><span class="line"><span class="string">&#x27;NOTSET&#x27;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&#x27;WARNING&#x27;</span>: <span class="number">30</span>,</span><br><span class="line"><span class="string">&#x27;ERROR&#x27;</span>: <span class="number">40</span>,</span><br><span class="line"><span class="string">&#x27;CRITICAL&#x27;</span>: <span class="number">50</span>&#125;</span><br><span class="line">logLevel = logLevelDefinition[config.get(<span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;level&#x27;</span>)]</span><br><span class="line">passwordFile = config.get(<span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;passwordFile&#x27;</span>)</span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 全局参数定义结束                  #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 微信随申码获取参数定义开始        #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 定义微信APP安装位置</span></span><br><span class="line">wxAppName = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxAppName&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 定义微信登录窗口</span></span><br><span class="line">wxLoginWindowClass = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxLoginWindowClass&#x27;</span>).strip()</span><br><span class="line">wxLoginWindowName = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxLoginWindowName&#x27;</span>).strip()</span><br><span class="line">wxLoginBtnPic = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxLoginBtnPic&#x27;</span>).strip()</span><br><span class="line">wxLoginBtn_x = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxLoginBtn_x&#x27;</span>)</span><br><span class="line">wxLoginBtn_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxLoginBtn_y&#x27;</span>)</span><br><span class="line"><span class="comment"># 定义微信主窗口</span></span><br><span class="line">wxWindowClass = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxWindowClass&#x27;</span>).strip()</span><br><span class="line">wxWindowName = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxWindowName&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 定义微信小程序面板窗口</span></span><br><span class="line">wxMicroPgWindowClass = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxMicroPgWindowClass&#x27;</span>).strip()</span><br><span class="line">wxMicroPgWindowName = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxMicroPgWindowName&#x27;</span>).strip()</span><br><span class="line">wx_xcxPic = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wx_xcxPic&#x27;</span>).strip()</span><br><span class="line">wx_ssbPic = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wx_ssbPic&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 定义随申办的窗口</span></span><br><span class="line">ssbWindowClass=config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssbWindowClass&#x27;</span>).strip()</span><br><span class="line">ssbWindowName=config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssbWindowName&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 定义一些鼠标移动的相对常量</span></span><br><span class="line"><span class="comment"># 0. 窗口位置</span></span><br><span class="line">left = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">top = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;top&#x27;</span>)</span><br><span class="line">width = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;width&#x27;</span>)</span><br><span class="line">height = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;height&#x27;</span>)</span><br><span class="line">repaint = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;repaint&#x27;</span>)</span><br><span class="line"><span class="comment"># 1. 搜索框</span></span><br><span class="line">searchBox_x = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;searchBox_x&#x27;</span>)</span><br><span class="line">searchBox_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;searchBox_y&#x27;</span>)</span><br><span class="line"><span class="comment"># 2. 小程序面板</span></span><br><span class="line">microPg_x = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;microPg_x&#x27;</span>)</span><br><span class="line">microPg_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;microPg_y&#x27;</span>)</span><br><span class="line"><span class="comment"># 3. 查找小程序</span></span><br><span class="line">s_microPg_x = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;s_microPg_x&#x27;</span>)</span><br><span class="line">s_microPg_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;s_microPg_y&#x27;</span>)</span><br><span class="line"><span class="comment"># 4. 随申办定位</span></span><br><span class="line">ssb_x = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssb_x&#x27;</span>)</span><br><span class="line">ssb_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssb_y&#x27;</span>)</span><br><span class="line"><span class="comment"># 5. 随申码定位</span></span><br><span class="line">ssm_x = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssm_x&#x27;</span>)</span><br><span class="line">ssm_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssm_y&#x27;</span>)</span><br><span class="line"><span class="comment"># 6. 亲属随申码主链接</span></span><br><span class="line">ssm_main_link_x = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssm_main_link_x&#x27;</span>)</span><br><span class="line">ssm_main_link_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssm_main_link_y&#x27;</span>)</span><br><span class="line"><span class="comment"># 7. 亲属随申码定位（x不变，y从310开始，以93位间隔增长）</span></span><br><span class="line">ssm_family_x = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssm_family_x&#x27;</span>)</span><br><span class="line">ssm_family_start_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssm_family_start_y&#x27;</span>)</span><br><span class="line">ssm_family_interval_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssm_family_interval_y&#x27;</span>)</span><br><span class="line">ssm_family_adjust_y = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;ssm_family_adjust_y&#x27;</span>) <span class="comment"># 亲属随申码返回的时候需要调整位置</span></span><br><span class="line"><span class="comment"># 定义搜索内容</span></span><br><span class="line">forSearch = config.get(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;wxSearch&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 截图区域</span></span><br><span class="line">imgLeft = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;imgLeft&#x27;</span>)</span><br><span class="line">imgTop = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;imgTop&#x27;</span>)</span><br><span class="line">imgRight = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;imgRight&#x27;</span>)</span><br><span class="line">imgBottom = config.getint(<span class="string">&#x27;weixin-ssm&#x27;</span>, <span class="string">&#x27;imgBottom&#x27;</span>)</span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 微信随申码获取参数定义结束        #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 钉钉获取参数定义开始              #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 定义钉钉APP安装位置</span></span><br><span class="line">ddAppName = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddAppName&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 定义钉钉登录窗口</span></span><br><span class="line">ddLoginWindowClass = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddLoginWindowClass&#x27;</span>).strip()</span><br><span class="line">ddLoginWindowName = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddLoginWindowName&#x27;</span>).strip()</span><br><span class="line">ddPasswordLoginPic = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddPasswordLoginPic&#x27;</span>).strip()</span><br><span class="line">ddPasswordLogin_x = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddPasswordLogin_x&#x27;</span>)</span><br><span class="line">ddPasswordLogin_y = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddPasswordLogin_y&#x27;</span>)</span><br><span class="line">ddInputPassword = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddInputPassword&#x27;</span>).strip()</span><br><span class="line">ddInputPassword_x = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddInputPassword_x&#x27;</span>)</span><br><span class="line">ddInputPassword_y = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddInputPassword_y&#x27;</span>)</span><br><span class="line">ddInputPhoneNumber = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddInputPhoneNumber&#x27;</span>).strip()</span><br><span class="line">ddInputPhoneNumber_x = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddInputPhoneNumber_x&#x27;</span>)</span><br><span class="line">ddInputPhoneNumber_y = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddInputPhoneNumber_y&#x27;</span>)</span><br><span class="line">ddLoginBtn = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddLoginBtn&#x27;</span>).strip()</span><br><span class="line">ddLoginBtn_x = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddLoginBtn_x&#x27;</span>)</span><br><span class="line">ddLoginBtn_y = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddLoginBtn_y&#x27;</span>)</span><br><span class="line">ddLoginPhone = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddLoginPhone&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 定义钉钉窗口</span></span><br><span class="line">ddWindowClass = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddWindowClass&#x27;</span>).strip()</span><br><span class="line">ddWindowName = config.get(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddWindowName&#x27;</span>).strip()</span><br><span class="line">ddWidth = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddWidth&#x27;</span>)</span><br><span class="line">ddHeight = config.getint(<span class="string">&#x27;Dingding&#x27;</span>, <span class="string">&#x27;ddHeight&#x27;</span>)</span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 钉钉获取参数定义结束              #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 晓黑板获取参数定义开始            #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 定义晓黑板窗口</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 晓黑板获取参数定义结束            #</span></span><br><span class="line"><span class="comment"># ********************************* #</span></span><br><span class="line"><span class="comment"># 定义晓黑板APP安装位置</span></span><br><span class="line">xhbAppName = config.get(<span class="string">&#x27;xiaoheiban&#x27;</span>, <span class="string">&#x27;xhbAppName&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 晓黑板登录窗口</span></span><br><span class="line">xhbLoginWindowClass = config.get(<span class="string">&#x27;xiaoheiban&#x27;</span>, <span class="string">&#x27;xhbLoginWindowClass&#x27;</span>).strip()</span><br><span class="line">xhbLoginWindowName = config.get(<span class="string">&#x27;xiaoheiban&#x27;</span>, <span class="string">&#x27;xhbLoginWindowName&#x27;</span>).strip()</span><br><span class="line"><span class="comment"># 晓黑板主窗口</span></span><br><span class="line">xhbMainWindowClass = config.get(<span class="string">&#x27;xiaoheiban&#x27;</span>, <span class="string">&#x27;xhbMainWindowClass&#x27;</span>).strip()</span><br><span class="line">xhbMainWindowName = config.get(<span class="string">&#x27;xiaoheiban&#x27;</span>, <span class="string">&#x27;xhbMainWindowName&#x27;</span>).strip()</span><br><span class="line">xhbLoginPhone = config.get(<span class="string">&#x27;xiaoheiban&#x27;</span>, <span class="string">&#x27;xhbLoginPhone&#x27;</span>).strip()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">cd = ConfigData()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;配置文件&quot;&gt;&lt;a href=&quot;#配置文件&quot; class=&quot;headerlink&quot; title=&quot;配置文件&quot;&gt;&lt;/a&gt;配置文件&lt;/h4&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
  </entry>
  
  <entry>
    <title>①pywin32和pyautogui实现微信随申码自动截取并在钉钉和晓黑板上传</title>
    <link href="https://www.liuyong.online/2020/09/25/%E2%91%A0pywin32%E5%92%8Cpyautogui%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E9%9A%8F%E7%94%B3%E7%A0%81%E8%87%AA%E5%8A%A8%E6%88%AA%E5%8F%96%E5%B9%B6%E5%9C%A8%E9%92%89%E9%92%89%E5%92%8C%E6%99%93%E9%BB%91%E6%9D%BF%E4%B8%8A%E4%BC%A0/"/>
    <id>https://www.liuyong.online/2020/09/25/%E2%91%A0pywin32%E5%92%8Cpyautogui%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E9%9A%8F%E7%94%B3%E7%A0%81%E8%87%AA%E5%8A%A8%E6%88%AA%E5%8F%96%E5%B9%B6%E5%9C%A8%E9%92%89%E9%92%89%E5%92%8C%E6%99%93%E9%BB%91%E6%9D%BF%E4%B8%8A%E4%BC%A0/</id>
    <published>2020-09-25T13:14:00.000Z</published>
    <updated>2022-10-27T12:22:29.012Z</updated>
    
    <content type="html"><![CDATA[<p>两个儿子，一个读小学，一个幼儿园。自从疫情缓解上课以来，根据学校的要求，每天都要上传同住人的随申码，还要填一系列的固定的信息，除了每天可能会变化的体温。我是个懒人，每天都要抱着手机截图，还要不停地填写几乎相同的东西，不仅无聊而且无趣，可是不填又不行，老师会一个一个催。</p><a id="more"></a><p>于是，想找些偷懒的方式，无外乎：</p><ol><li>在手机上自动操作</li><li>在电脑上自动操作</li></ol><ul><li>应用程序，或者</li><li>网站<br>做决定也很容易，手机上要实现自动操作，至少需要去截其他APP的图，应该需要Root吧；电脑上自动操作，钉钉只有应用程序，晓黑板有应用程序，也有网站，可惜晓黑板的网站，登录部分都是用JS写出来的，用Selenium暂时水平不够，所以还没有找到合适的方法，于是简单一点，加上微信PC端，全部用应用程序吧。<br>所以，前提条件：</li></ul><ol><li>安装微信、钉钉和哓黑板的windows版本的客户端</li><li>准备好钉钉、哓黑板的用户名（手机号）和密码</li><li>微信每次都必须扫码登陆，所以设成等待手机端确认后自动登录</li><li>在微信中，找到‘随申办’小程序，注册好个人、还有同住人的随申码（小孩、60岁以上的人自动可以通过，否则要提供手持身份证的照片、户口本或者结婚证）</li><li>最后就是手动把流程走一遍，同时开一个捕捉鼠标位置的程序，把各个关键的点全部记录下来，作为默认位置。而在实际程序中，尽量使用pyautogui的screenshot的识图功能，所以每个需要做出选择点的图片（带文字）也需要截屏下来。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pywin32api</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">pos = win32api.GetCursorPos()</span><br><span class="line">print(pos)</span><br></pre></td></tr></table></figure>2个整天终于把程序调好了，只要没有大的幺蛾子，每天要做的事情就是启动程序，然后在微信上确认一下登录，剩下的，程序统统自己搞定（当然，还能进一步偷懒，设个计划任务）<br>下面是主要的工具和包：</li><li>SPY++：这个是微软的工具，用来识别所有窗口的类名和窗口名称，使得程序可以控制这些窗口和控件</li><li>pywin32api，pywin32con，pywin32gui的包，pip就行</li><li>pyautogui包（不是一般得强大！！！）<br>程序还没有最终调整好，只适合有一定动手能力的人~</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;两个儿子，一个读小学，一个幼儿园。自从疫情缓解上课以来，根据学校的要求，每天都要上传同住人的随申码，还要填一系列的固定的信息，除了每天可能会变化的体温。我是个懒人，每天都要抱着手机截图，还要不停地填写几乎相同的东西，不仅无聊而且无趣，可是不填又不行，老师会一个一个催。&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="兴趣爱好" scheme="https://www.liuyong.online/categories/interesting/"/>
    
    
  </entry>
  
  <entry>
    <title>typecho在用pymysql-MariaDB的时候插入数据遇到的问题及其解决</title>
    <link href="https://www.liuyong.online/2020/09/09/typecho%E5%9C%A8%E7%94%A8pymysql-MariaDB%E7%9A%84%E6%97%B6%E5%80%99%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3/"/>
    <id>https://www.liuyong.online/2020/09/09/typecho%E5%9C%A8%E7%94%A8pymysql-MariaDB%E7%9A%84%E6%97%B6%E5%80%99%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E5%85%B6%E8%A7%A3%E5%86%B3/</id>
    <published>2020-09-09T01:53:00.000Z</published>
    <updated>2022-10-27T12:22:28.964Z</updated>
    
    <content type="html"><![CDATA[<h4 id="程序环境"><a href="#程序环境" class="headerlink" title="程序环境"></a><font color=#FF8C00>程序环境</font></h4><a id="more"></a><ul><li>运行环境：</li><li>树莓派: Linux 5.4.51-v7</li><li>nginx: 1.14.2</li><li>MariaDB: 10.3.23</li><li>typecho: 1.1(17.10.30)</li><li>开发环境：</li><li>pymysql: 0.10.0</li><li>python：3.6.8<h4 id="问题及解决"><a href="#问题及解决" class="headerlink" title="问题及解决"></a><font color=#FF8C00>问题及解决</font></h4></li></ul><ol><li>typecho的内容表为 typecho_contents, 表设计如下：<br>| Field | Type | Null | Key | Default | Extra<br>| — | — | — | — | —-| —| —|<br>|cid  | int(10) unsigned  | NO  | PRI | NULL  | auto_increment |<br>| title | varchar(200)  | YES  |  | NULL | |<br>| slug | varchar(200)  | YES  | UNI | NULL | |<br>| created  | int(10) unsigned  | YES  | MUL | 0  |  |<br>| modified  | int(10) unsigned  | YES  |  | 0  |  |<br>| text | longtext  | YES  |  | NULL | |<br>| order  | int(10) unsigned  | YES  |  | 0  |  |<br>| authorId  | int(10) unsigned  | YES  |  | 0  |  |<br>| template  | varchar(32)  | YES  |  | NULL |  |<br>| type  | varchar(16)  | YES  |  | post |  |<br>| status  | varchar(16)  | YES  |  |publish |  |<br>| password  | varchar(32)  | YES  |  | NULL |  |<br>| commentsNum  | int(10) unsigned  | YES  |  | 0  |  |<br>| allowComment | char(1)  | YES  |  | 0 |  |<br>| allowPing | char(1)  | YES  |  | 0 |  |<br>| allowFeed | char(1)  | YES  |  | 0 |  |<br>| parent  | int(10) unsigned  | YES  |  | 0  |  |<br>| views | int(10) | YES  |  | 0  |  |</li><li>遇到的问题<br>在用pymysql访问MariaDB的时候，前期的connect，cursor都是正常的，查询也没有问题，但是在插入数据的时候，遇到了幺蛾子：</li></ol><ul><li>如果对typecho_contents进行全表全字段覆盖式的插入：</li><li>不指名字段名字，可以插入成功<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO typecho_contents  VALUES ( (select Auto_increment From information_schema.Tables where Table_Schema=<span class="string">&quot;typechoblog&quot;</span> AND table_name = <span class="string">&quot;typecho_contents&quot;</span>), <span class="string">&#x27;测试数据TITLE&#x27;</span>, (select Auto_increment From information_schema.Tables where Table_Schema=<span class="string">&quot;typechoblog&quot;</span> AND table_name = <span class="string">&quot;typecho_contents&quot;</span>), <span class="number">1599480000</span>, <span class="number">1599480000</span>, <span class="string">&#x27;测试数据内容&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;post&#x27;</span>, <span class="string">&#x27;publish&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="number">1</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="number">0</span>, <span class="number">200</span>);</span><br></pre></td></tr></table></figure></li><li>指名字段名字，插入失败<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO typecho_contents(cid, title, slug, created, modified, text, order, authorId, template, <span class="built_in">type</span>, status, password, commentsNum, allowComment, allowPing, allowFeed, parent, views)  VALUES ( (select Auto_increment From information_schema.Tables where Table_Schema=<span class="string">&quot;typechoblog&quot;</span> AND table_name = <span class="string">&quot;typecho_contents&quot;</span>), <span class="string">&#x27;测试数据III&#x27;</span>, (select Auto_increment From information_schema.Tables where Table_Schema=<span class="string">&quot;typechoblog&quot;</span> AND table_name = <span class="string">&quot;typecho_contents&quot;</span>), <span class="number">1599480000</span>, <span class="number">1599480000</span>, <span class="string">&#x27;这个只是一个测试，看看情况再说2&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;post&#x27;</span>, <span class="string">&#x27;publish&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="number">101</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="number">0</span>, <span class="number">200</span>);</span><br></pre></td></tr></table></figure>把SQL语句直接放到MariaDB的shell环境也一样,     出错信息：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR <span class="number">1064</span> (<span class="number">42000</span>): You have an error <span class="keyword">in</span> your SQL syntax; check the manual that corresponds to your MariaDB server version <span class="keyword">for</span> the right syntax to use near <span class="string">&#x27;order, authorId, template, type, status, password, commentsNum, allowComment,...&#x27;</span> at line <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li>如果对typecho_contents指定字段插入:</li><li>用SET，可以插入成功<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sql = <span class="string">&quot;INSERT INTO typecho_contents SET title=‘%s’, slug=%s, created=%s, modified=%s, text=‘%s’, authorId=%s&quot;</span></span><br><span class="line">param = (blog.title, cid, created, created, text, authorId)</span><br><span class="line">sql = sql % param</span><br><span class="line">cursor.execute(sql)</span><br></pre></td></tr></table></figure></li><li>用VALUES，插入失败<br>用法和上面全表全字段插入的方式一样，就是VALUES后面显示写明字段名<h4 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a><font color=#FF8C00>最终代码</font></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql, time</span><br><span class="line"><span class="keyword">from</span> ConfigData <span class="keyword">import</span> ConfigData <span class="keyword">as</span> cd</span><br><span class="line"><span class="keyword">from</span> Blog <span class="keyword">import</span> Blog</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeTypechoData</span>(<span class="params">blog</span>):</span></span><br><span class="line">cid =  <span class="string">&#x27;(select Auto_increment From information_schema.Tables where Table_Schema=&quot;typechoblog&quot; AND table_name = &quot;typecho_contents&quot;)&#x27;</span></span><br><span class="line">created = <span class="built_in">int</span>(time.mktime(time.strptime(blog.publish, cd.timeFormat)))</span><br><span class="line">text = <span class="string">&quot;&lt;!--markdown--&gt;&quot;</span> + blog.content</span><br><span class="line">order = <span class="number">0</span></span><br><span class="line">authorId = <span class="number">1</span></span><br><span class="line">template = <span class="string">&#x27;&#x27;</span></span><br><span class="line">ctype = <span class="string">&#x27;post&#x27;</span></span><br><span class="line">status = <span class="string">&#x27;publish&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line">commentsNum = <span class="built_in">int</span>(blog.comment)</span><br><span class="line">allowComment = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">allowPing = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">allowFeed = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">parent = <span class="number">0</span></span><br><span class="line">views = <span class="built_in">int</span>(blog.read)</span><br><span class="line">conn = pymysql.Connect(</span><br><span class="line">host = cd.db_host,</span><br><span class="line">port = cd.db_port,</span><br><span class="line">user = cd.db_user,</span><br><span class="line">passwd = cd.db_password,</span><br><span class="line">db = cd.db_name,</span><br><span class="line">charset = cd.db_charset</span><br><span class="line">)</span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">sql = <span class="string">&quot;INSERT INTO typecho_contents SET title=&#x27;%s&#x27;, slug=%s, created=%s, modified=%s, text=&#x27;%s&#x27;, authorId=%s, commentsNum=%s, views=%s&quot;</span></span><br><span class="line">param = (blog.title, cid, created, created, text, authorId, commentsNum, views)</span><br><span class="line">sql = sql % param</span><br><span class="line">print(sql)</span><br><span class="line">cursor.execute(sql)</span><br><span class="line">conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">conn.rollback()</span><br><span class="line">print(e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">blog = Blog(<span class="string">&#x27;2020-09测试数据TITLE&#x27;</span>,<span class="string">&#x27;http&#x27;</span>, <span class="string">&#x27;2020-09-08 10:00:00&#x27;</span>, <span class="number">10</span>, <span class="number">20</span>, [], <span class="string">&#x27;#### 标题1 #### 标题2&#x27;</span>, [], [])</span><br><span class="line">makeTypechoData(blog)</span><br></pre></td></tr></table></figure>除了SQL之外，里面还有两点需要注意的：</li></ul><ol><li>是关于自增字段取值的，slug自动保持和cid一样，所以，取得当前记录的自增记录的语句为：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cid =  <span class="string">&#x27;(select Auto_increment From information_schema.Tables where Table_Schema=&quot;typechoblog&quot; AND table_name = &quot;typecho_contents&quot;)&#x27;</span></span><br></pre></td></tr></table></figure></li><li>是关于python时间处理的<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">created = <span class="built_in">int</span>(time.mktime(time.strptime(blog.publish, cd.timeFormat)))`</span><br></pre></td></tr></table></figure>具体就不多写了，看python的time模块注意mktime和strptime的用法就行</li></ol>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;程序环境&quot;&gt;&lt;a href=&quot;#程序环境&quot; class=&quot;headerlink&quot; title=&quot;程序环境&quot;&gt;&lt;/a&gt;&lt;font color=#FF8C00&gt;程序环境&lt;/font&gt;&lt;/h4&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    
    <category term="Python" scheme="https://www.liuyong.online/tags/Python/"/>
    
    <category term="pymysql" scheme="https://www.liuyong.online/tags/pymysql/"/>
    
    <category term="typecho" scheme="https://www.liuyong.online/tags/typecho/"/>
    
    <category term="mariadb" scheme="https://www.liuyong.online/tags/mariadb/"/>
    
    <category term="自增字段取值" scheme="https://www.liuyong.online/tags/%E8%87%AA%E5%A2%9E%E5%AD%97%E6%AE%B5%E5%8F%96%E5%80%BC/"/>
    
    <category term="python时间戳" scheme="https://www.liuyong.online/tags/python%E6%97%B6%E9%97%B4%E6%88%B3/"/>
    
  </entry>
  
  <entry>
    <title>爬取新浪博客文章的Python实现之②</title>
    <link href="https://www.liuyong.online/2020/09/01/%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%9A%84Python%E5%AE%9E%E7%8E%B0%E4%B9%8B%E2%91%A1/"/>
    <id>https://www.liuyong.online/2020/09/01/%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%9A%84Python%E5%AE%9E%E7%8E%B0%E4%B9%8B%E2%91%A1/</id>
    <published>2020-09-01T14:19:00.000Z</published>
    <updated>2022-10-27T12:22:29.012Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Blog-py"><a href="#Blog-py" class="headerlink" title="Blog.py"></a><font color=#FF8C00>Blog.py</font></h5><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Blog</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, title, url, publish, comment, read, picAddress, content, tag, category</span>):</span></span><br><span class="line">self.title = title                <span class="comment">#主题</span></span><br><span class="line">self.url = url                    <span class="comment">#URL</span></span><br><span class="line">self.publish = publish            <span class="comment">#发表日期</span></span><br><span class="line">self.comment = comment            <span class="comment">#评论数</span></span><br><span class="line">self.read = read                  <span class="comment">#阅读数</span></span><br><span class="line">self.picAddress = picAddress      <span class="comment">#图片地址列表，无的话为空</span></span><br><span class="line">self.content = content            <span class="comment">#内容</span></span><br><span class="line">self.tag = tag                    <span class="comment">#标签列表，无的话为空</span></span><br><span class="line">self.category = category          <span class="comment">#类别</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span>(<span class="params">self</span>):</span></span><br><span class="line">print(<span class="string">&quot;title: &quot;</span>, self.title)</span><br><span class="line">print(<span class="string">&quot;url:&quot;</span>, self.url)</span><br><span class="line">print(<span class="string">&quot;comment&quot;</span>, self.comment)</span><br><span class="line">print(<span class="string">&quot;read&quot;</span>, self.read)</span><br><span class="line">print(<span class="string">&quot;picAddress&quot;</span>, self.picAddress)</span><br><span class="line">print(<span class="string">&quot;tag&quot;</span>, self.tag)</span><br><span class="line">print(<span class="string">&quot;category&quot;</span>, self.category)</span><br><span class="line">print(<span class="string">&quot;content&quot;</span>, self.content)</span><br></pre></td></tr></table></figure><h5 id="getBlogofSina-py"><a href="#getBlogofSina-py" class="headerlink" title="getBlogofSina.py"></a><font color=#FF8C00>getBlogofSina.py</font></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, urllib, urllib.request <span class="keyword">as</span> requests, re, codecs, html</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> ConfigData <span class="keyword">import</span> ConfigData <span class="keyword">as</span> cd</span><br><span class="line"><span class="keyword">from</span> Blog <span class="keyword">import</span> Blog</span><br><span class="line"><span class="comment"># 取得博文详细信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_BlogDetail</span>(<span class="params">strUrl</span>):</span></span><br><span class="line"><span class="comment">#retBlog = Blog(title, strUrl, publish, comment, read, picAddress, content, tag, category)</span></span><br><span class="line">request = requests.Request(strUrl)</span><br><span class="line">response = requests.urlopen(request)</span><br><span class="line">html = response.read()</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"><span class="comment"># 查找包含TAG和CATEGORY的段落</span></span><br><span class="line">strFindList = <span class="built_in">str</span>(soup.find_all(<span class="string">&#x27;div&#x27;</span>, cd.patternTagDiv))</span><br><span class="line">tagList = re.findall(cd.patternTag, strFindList)</span><br><span class="line"><span class="keyword">if</span> tagList != <span class="literal">None</span> <span class="keyword">and</span> <span class="built_in">len</span>(tagList) &gt; <span class="number">0</span>:</span><br><span class="line">tag = (<span class="built_in">str</span>(re.findall(cd.patternTag, strFindList)[<span class="number">0</span>])[<span class="number">6</span>:-<span class="number">2</span>]).split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">tag = []</span><br><span class="line">categoryList = re.findall(cd.patternCategory, strFindList)</span><br><span class="line"><span class="keyword">if</span> categoryList != <span class="literal">None</span> <span class="keyword">and</span> <span class="built_in">len</span>(categoryList) &gt; <span class="number">0</span>:</span><br><span class="line">category = (<span class="built_in">str</span>(re.findall(cd.patternCategory, strFindList)[<span class="number">0</span>])[<span class="number">1</span>:-<span class="number">3</span>]).split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">category = []</span><br><span class="line"><span class="comment"># 查找TITLE的段落</span></span><br><span class="line">strFindList = <span class="built_in">str</span>(soup.find(<span class="string">&#x27;title&#x27;</span>)).strip()</span><br><span class="line">title = strFindList[<span class="number">7</span>:-<span class="number">8</span>].split(<span class="string">&quot;_&quot;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># print(title)</span></span><br><span class="line"><span class="comment"># 查找发表时间的段落</span></span><br><span class="line">strFindList = <span class="built_in">str</span>(soup.find_all(<span class="string">&#x27;span&#x27;</span>, cd.patternTitleDetail))</span><br><span class="line">publish = <span class="built_in">str</span>(re.findall(cd.patternPublishDetail, strFindList)[<span class="number">0</span>])</span><br><span class="line"><span class="comment"># 用Python发送API，获取JS返回值的方式获取评论数和阅读数</span></span><br><span class="line">comment, read = get_cr_num(strUrl, get_crDict(<span class="string">&quot;&amp;aids=&quot;</span> + strUrl[-<span class="number">11</span>:-<span class="number">5</span>]))</span><br><span class="line"><span class="comment"># 获得博文内容</span></span><br><span class="line">content = <span class="built_in">str</span>(soup.find(<span class="string">&#x27;div&#x27;</span>, cd.patternContent ))</span><br><span class="line"><span class="comment"># 获得图像地址列表</span></span><br><span class="line">strFindList = soup.find_all(<span class="string">&#x27;img&#x27;</span>, title=re.<span class="built_in">compile</span>(title))</span><br><span class="line">picAddressList = []</span><br><span class="line"><span class="keyword">for</span> strFind <span class="keyword">in</span> strFindList:</span><br><span class="line">picAddress = <span class="built_in">str</span>(re.findall(<span class="string">r&#x27;real_src=.+src=&#x27;</span>, <span class="built_in">str</span>(strFind)))[<span class="number">12</span>:-<span class="number">6</span>].strip()[:-<span class="number">1</span>]</span><br><span class="line">picAddress = picAddress.replace(<span class="string">&#x27;&amp;amp;&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">picAddressList.append(picAddress)</span><br><span class="line"><span class="keyword">return</span> Blog(title, strUrl, publish, comment, read, picAddressList, content, tag, category)</span><br><span class="line"><span class="comment"># 取得评论和阅读数的字典合集</span></span><br><span class="line"><span class="comment"># INPUT: param （&amp;aids=02vdeu,0136nk）</span></span><br><span class="line"><span class="comment"># RETURN: r - 评论数； c - 阅读数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_crDict</span>(<span class="params">param</span>):</span></span><br><span class="line">url = cd.crUrl + param</span><br><span class="line">request = requests.Request(url)</span><br><span class="line">response = requests.urlopen(request)</span><br><span class="line">pattern = cd.patternCR</span><br><span class="line">htmlW = <span class="built_in">str</span>(re.findall(pattern, <span class="built_in">str</span>(response.read()).strip())[<span class="number">0</span>][:-<span class="number">1</span>])</span><br><span class="line"><span class="keyword">return</span> e v a l(htmlW)    <span class="comment"># 返回字典 把e v a l的空格都要去掉，这个编辑器没法提交，所以只能加空格</span></span><br><span class="line"><span class="comment"># 取得评论和阅读数</span></span><br><span class="line"><span class="comment"># INPUT: _url （http://blog.sina.com.cn/s/blog_5922f3300101e20o.htm）</span></span><br><span class="line"><span class="comment"># RETURN: r - 评论数； c - 阅读数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cr_num</span>(<span class="params">strUrl, cr_dict</span>):</span></span><br><span class="line">needFindKey = strUrl[-<span class="number">11</span>:-<span class="number">5</span>]</span><br><span class="line"><span class="keyword">return</span> cr_dict[needFindKey].get(<span class="string">&#x27;c&#x27;</span>), cr_dict[needFindKey].get(<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeBlogList</span>():</span></span><br><span class="line"><span class="comment"># 保存具体内容的待爬取URL清单</span></span><br><span class="line">needProcessURL = <span class="built_in">set</span>()</span><br><span class="line"><span class="comment"># 需要爬取的URL列表</span></span><br><span class="line">starUrlList = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">starUrlList.append(cd.strUrl + <span class="built_in">str</span>(i) + <span class="string">&quot;.html&quot;</span>)</span><br><span class="line"><span class="comment"># 生成博客文章一览表，格式：</span></span><br><span class="line"><span class="comment"># 序号 | 主题 | URL| 是否有图| 评论数/阅读数| 发表时间</span></span><br><span class="line">fout = codecs.<span class="built_in">open</span>(<span class="string">&#x27;sina.html&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">fout.write(cd.htmlStart)</span><br><span class="line">i=<span class="number">1</span>    <span class="comment">#  博客文章序号</span></span><br><span class="line">blogList = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> starUrlList:</span><br><span class="line">request = requests.Request(url, headers=cd.headers)</span><br><span class="line">response = requests.urlopen(request)</span><br><span class="line">html = response.read()</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"><span class="comment"># strFindList = soup.find_all(&#x27;a&#x27;, href=re.compile(cd.patternALink))</span></span><br><span class="line">strFindList = soup.find_all(<span class="string">&#x27;div&#x27;</span>, cd.patternDiv)</span><br><span class="line">paramCR = <span class="string">&#x27;&amp;aids=&#x27;</span></span><br><span class="line"><span class="keyword">for</span> strFind <span class="keyword">in</span> strFindList:</span><br><span class="line">strFind = <span class="built_in">str</span>(strFind)</span><br><span class="line">resUrl = re.findall(cd.patternUrl, strFind)[<span class="number">0</span>]</span><br><span class="line">blogList.append(get_BlogDetail(<span class="built_in">str</span>(resUrl)))</span><br><span class="line"><span class="keyword">for</span> blog <span class="keyword">in</span> blogList:</span><br><span class="line">hasPic = cd.outPic <span class="keyword">if</span> <span class="built_in">len</span>(blog.picAddress) &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">fout.write(cd.htmlCont.<span class="built_in">format</span>(<span class="built_in">str</span>(i), blog.title, blog.url, blog.url, hasPic, blog.comment, blog.read, blog.publish))</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line">fout.write(cd.htmlEnd)</span><br><span class="line">fout.close()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">makeBlogList()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;Blog-py&quot;&gt;&lt;a href=&quot;#Blog-py&quot; class=&quot;headerlink&quot; title=&quot;Blog.py&quot;&gt;&lt;/a&gt;&lt;font color=#FF8C00&gt;Blog.py&lt;/font&gt;&lt;/h5&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    
    <category term="python爬虫" scheme="https://www.liuyong.online/tags/python%E7%88%AC%E8%99%AB/"/>
    
    <category term="新浪博客" scheme="https://www.liuyong.online/tags/%E6%96%B0%E6%B5%AA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>爬取新浪博客文章的Python实现之①</title>
    <link href="https://www.liuyong.online/2020/09/01/%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%9A%84Python%E5%AE%9E%E7%8E%B0%E4%B9%8B%E2%91%A0/"/>
    <id>https://www.liuyong.online/2020/09/01/%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%9A%84Python%E5%AE%9E%E7%8E%B0%E4%B9%8B%E2%91%A0/</id>
    <published>2020-09-01T13:58:00.000Z</published>
    <updated>2022-10-27T12:22:29.008Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;学以致用，既然看了看python的爬虫，今天就动手折腾一个吧。在折腾的过程中，充分体会到了正则表达式的威力和用处，不过笨人有笨法子。除了正则，还能用字符串不是？</p><a id="more"></a><h5 id="实现路径"><a href="#实现路径" class="headerlink" title="实现路径"></a><font color=#FF8C00>实现路径</font></h5><ol><li>确定爬取内容的HTML结构，设计对应的存储结构</li><li>确定爬取内容的HTML、JS、CS的结构，确定可能的技术路线</li><li>首先实现爬取和数据抓取，然后后续实现和typecho的对接<h5 id="要点难点"><a href="#要点难点" class="headerlink" title="要点难点"></a><font color=#FF8C00>要点难点</font></h5></li><li>正则表达式熟练度不够，又不想花费太多时间；</li><li>不是所有的内容都能在HTML代码中找到的，需要用到Firefox的WEB开发工具-&gt;网络-&gt;XHD等等去确定这些必要的信息是怎么来的。再去观察Request的信息头，看看发送哪些数据，发到哪个接口</li><li>自己的图片怎么样抓下来<h5 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a><font color=#FF8C00>程序实现</font></h5>经过上面的考量，整个程序（爬取部分）分成3个模块:</li><li>一个是设置一些常用参数的-ConfigData.py</li><li>一个是设置访问对象结构的-Blog.py</li><li>然后就是一个主要的动作程序-getBlogofSina.py<h5 id="ConfigData-py"><a href="#ConfigData-py" class="headerlink" title="ConfigData.py"></a><font color=#FF8C00>ConfigData.py</font></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ConfigData.py</span></span><br><span class="line"><span class="comment">#一些固定的设置</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConfigData</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="comment"># 设置初始URL</span></span><br><span class="line"><span class="comment"># 新浪博客的URL为 articlelist_+【用户id】+ _d + _d + .html</span></span><br><span class="line"><span class="comment"># 第一个_d： 0表示全部文章；1开始表示分类文章</span></span><br><span class="line"><span class="comment"># 第二个_d:  表示页码从1开始</span></span><br><span class="line">strUrl = <span class="string">&#x27;http://blog.sina.com.cn/s/articlelist_1495462704_0_&#x27;</span></span><br><span class="line"><span class="comment">#   设置爬虫的浏览器User-Agent</span></span><br><span class="line"><span class="comment">#   https://useragent.buyaocha.com 获得当前浏览器的User-Agent</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; \</span></span><br><span class="line"><span class="string">rv:80.0) Gecko/20100101 Firefox/80.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#   分析新浪博客的博文目录，得到博文目录列表页的解析正则表达式</span></span><br><span class="line"><span class="comment">#   http://blog.sina.com.cn/s/articlelist_1495462704_0_2.html</span></span><br><span class="line">patternUrlList = <span class="string">r&#x27;articlelist[\w]*_0_[\w]*.html&#x27;</span></span><br><span class="line"><span class="comment">#     得到博文目录列表页中每页的博文连接的解析正则表达式</span></span><br><span class="line"><span class="comment">#     &lt;div class=&quot;articleCell SG_j_linedot1&quot;&gt;</span></span><br><span class="line"><span class="comment">#     &lt;p class=&quot;atc_main SG_dot&quot;&gt;</span></span><br><span class="line"><span class="comment">#     &lt;span class=&quot;atc_ic_f&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">#     &lt;span class=&quot;atc_title&quot;&gt;</span></span><br><span class="line"><span class="comment">#     &lt;a href=&quot;http://blog.sina.com.cn/s/blog_5922f3300102z36z.html&quot; target=&quot;_blank&quot; title=&quot;&quot;&gt;完美数和亲和数Python和C&lt;/a&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">#     &lt;span class=&quot;atc_ic_b&quot;&gt;&lt;img align=&quot;absmiddle&quot; class=&quot;SG_icon SG_icon18&quot; height=&quot;15&quot; src=&quot;http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif&quot; title=&quot;此博文包含图片&quot; width=&quot;15&quot;/&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     &lt;p class=&quot;atc_info&quot;&gt;</span></span><br><span class="line"><span class="comment">#     &lt;span class=&quot;atc_data&quot; id=&quot;count_5922f3300102z36z&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="comment">#     &lt;span class=&quot;atc_tm SG_txtc&quot;&gt;2020-08-17 22:16&lt;/span&gt;</span></span><br><span class="line"><span class="comment">#     &lt;span class=&quot;atc_set&quot;&gt;</span></span><br><span class="line"><span class="comment">#     &lt;/span&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#patternALink = r&#x27;5922f3300[\w]+.html&#x27;</span></span><br><span class="line">patternDiv = &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;articleCell SG_j_linedot1&#x27;</span>&#125;</span><br><span class="line">patternUrl = <span class="string">r&#x27;http:\/\/[\w\.\/]*.html&#x27;</span></span><br><span class="line">patternTitle = <span class="string">r&#x27;&gt;[\u4e00-\u9fa5\w]+&#x27;</span></span><br><span class="line">patternPic = <span class="string">r&#x27;img&#x27;</span></span><br><span class="line">patternPublish = <span class="string">r&#x27;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;\s+\d&#123;2&#125;:\d&#123;2&#125;&#x27;</span></span><br><span class="line">outPic = <span class="string">&#x27;有图&#x27;</span></span><br><span class="line"><span class="comment"># 获取博客文章详细页面的正则表达式</span></span><br><span class="line">patternTagDiv = &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;articalTag&#x27;</span>&#125;</span><br><span class="line">patternTag = <span class="string">r&quot;\$tag=.+&quot;</span>   <span class="comment">#获取TAG</span></span><br><span class="line">patternCategory = <span class="string">r&#x27;\&gt;[\u4e00-\u9a5e\w\s]+\&lt;\/a&#x27;</span></span><br><span class="line">patternTitleDetail = &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;time SG_txtc&#x27;</span>&#125;</span><br><span class="line">patternPublishDetail = <span class="string">r&#x27;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;\s+\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;&#x27;</span></span><br><span class="line">patternContent = &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;articalContent&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#   评论和阅读数量来自于js，通过firefox的web开发工具【网络】查看其api接口和参数</span></span><br><span class="line"><span class="comment">#   其初始#url=&#x27;http://comet.blog.sina.com.cn/api?maintype=num&amp;uid=5922f330&amp;aids=02z36z,02z2zj,02x881,02vdeu,02v0dv,02uwl0,01fdfa,01e20o,01dzuf,01dqjv,01dmef,01dkrs,01db4f,01d9bi,01d5om,01d5bj,01d2wt,01d2mg,01cx8d,01cx7e,01brlp,01b1ik,01av40,01anza,01a5u8,019zlo,019uv9,019tsy,019rli,015lxq,0156di,0150o8,014z1t,014wcu,014u1r,014rjf,014ovo,014ov5,014ovm,014ov1,014ov6,014o1b,0149fb,0149f4,0137za,0137q6,0137kc,0137ea,0137d9,0136nk&amp;requestId=aritlces_number_6610&amp;fetch=c,r&#x27;</span></span><br><span class="line"><span class="comment">#   发现url=&#x27;http://comet.blog.sina.com.cn/api?maintype=num&amp;fetch=c,r&amp;uid=5922f330&amp;aids=02z36z,02z2zj,02x881,02vdeu,02v0dv,02uwl0,01fdfa,01e20o,01dzuf,01dqjv,01dmef,01dkrs,01db4f,01d9bi,01d5om,01d5bj,01d2wt,01d2mg,01cx8d,01cx7e,01brlp,01b1ik,01av40,01anza,01a5u8,019zlo,019uv9,019tsy,019rli,015lxq,0156di,0150o8,014z1t,014wcu,014u1r,014rjf,014ovo,014ov5,014ovm,014ov1,014ov6,014o1b,0149fb,0149f4,0137za,0137q6,0137kc,0137ea,0137d9,0136nk&#x27;</span></span><br><span class="line"><span class="comment">#   即可，也就是说必要的参数包括maintype, fetch, uid和aids</span></span><br><span class="line"><span class="comment">#   在这里，uid = 5922f330， aids需要动态构筑，就是具体博文的后6位</span></span><br><span class="line"><span class="comment">#   博文： http://blog.sina.com.cn/s/blog_5922f3300101e20o.html</span></span><br><span class="line"><span class="comment">#   其中： 5922f330为uid， 01用途不详， 后面六位 01e20o为aid</span></span><br><span class="line"><span class="comment">#   为了后面处理方便，为保持程序灵活性，以后可将uid也设成动态构筑</span></span><br><span class="line">crUrl = <span class="string">&#x27;http://comet.blog.sina.com.cn/api?maintype=num&amp;fetch=c,r&amp;uid=5922f330&#x27;</span></span><br><span class="line">patternCR = <span class="string">r&#x27;&#123;.*&#125;\)&#x27;</span></span><br><span class="line"><span class="comment"># 设置logging的格式和级别</span></span><br><span class="line">loggingLevel = logging.DEBUG</span><br><span class="line">loggingFormat = <span class="string">&#x27;%(asctime)s - %(filename)s[line:%(lineno)d] - %(levelname)s: %(message)s&#x27;</span></span><br><span class="line"><span class="comment"># 设置初始URL</span></span><br><span class="line">startURL = <span class="string">&#x27;http://blog.sina.com.cn/s/articlelist_1495462704_0_1.html&#x27;</span></span><br><span class="line"><span class="comment"># 设置输出格式</span></span><br><span class="line">htmlStart = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;HTML&gt;&lt;head&gt;&lt;meta= charset=&quot;utf-8&quot; /&gt;&lt;title&gt;新浪博客抓取结果&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;style type=&quot;text/css&quot;&gt;</span></span><br><span class="line"><span class="string">@charset &quot;utf-8&quot;;</span></span><br><span class="line"><span class="string">/* CSS Document */</span></span><br><span class="line"><span class="string">.tabtop13 &#123;</span></span><br><span class="line"><span class="string">margin-top: 13px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.tabtop13 td&#123;</span></span><br><span class="line"><span class="string">background-color:#ffffff;</span></span><br><span class="line"><span class="string">height:25px;</span></span><br><span class="line"><span class="string">line-height:150%;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.font-center&#123; text-align:center&#125;</span></span><br><span class="line"><span class="string">.btbg&#123;background:#e9faff !important;&#125;</span></span><br><span class="line"><span class="string">.btbg1&#123;background:#f2fbfe !important;&#125;</span></span><br><span class="line"><span class="string">.btbg2&#123;background:#f3f3f3 !important;&#125;</span></span><br><span class="line"><span class="string">.biaoti&#123;</span></span><br><span class="line"><span class="string">font-family: 微软雅黑;</span></span><br><span class="line"><span class="string">font-size: 36px;</span></span><br><span class="line"><span class="string">font-weight: bold;</span></span><br><span class="line"><span class="string">border-bottom:1px dashed #CCCCCC;</span></span><br><span class="line"><span class="string">color: #255e95;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.titfont &#123;</span></span><br><span class="line"><span class="string">font-family: 微软雅黑;</span></span><br><span class="line"><span class="string">font-size: 16px;</span></span><br><span class="line"><span class="string">font-weight: bold;</span></span><br><span class="line"><span class="string">color: #255e95;</span></span><br><span class="line"><span class="string">background: url(../images/ico3.gif) no-repeat 15px center;</span></span><br><span class="line"><span class="string">background-color:#e9faff;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.tabtxt2 &#123;</span></span><br><span class="line"><span class="string">font-family: 微软雅黑;</span></span><br><span class="line"><span class="string">font-size: 14px;</span></span><br><span class="line"><span class="string">font-weight: bold;</span></span><br><span class="line"><span class="string">text-align: right;</span></span><br><span class="line"><span class="string">padding-right: 10px;</span></span><br><span class="line"><span class="string">color:#327cd1;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.tabtxt3 &#123;</span></span><br><span class="line"><span class="string">font-family: 微软雅黑;</span></span><br><span class="line"><span class="string">font-size: 14px;</span></span><br><span class="line"><span class="string">padding-left: 15px;</span></span><br><span class="line"><span class="string">color: #000;</span></span><br><span class="line"><span class="string">margin-top: 10px;</span></span><br><span class="line"><span class="string">margin-bottom: 10px;</span></span><br><span class="line"><span class="string">line-height: 20px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; align=&quot;center&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;tr&gt;&lt;td align=&quot;center&quot; class=&quot;biaoti&quot; height=&quot;60&quot;&gt;</span></span><br><span class="line"><span class="string">我的新浪博客&amp;nbsp;&amp;nbsp;:&amp;nbsp;&amp;nbsp;</span></span><br><span class="line"><span class="string">&lt;span style=&quot;font-size:32px;color:blue&quot;&gt;烟波满目凭栏久&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;span style=&quot;font-family:Times New Roman;font-size:18px&quot;&gt;(http://blog.sina.com.cn/liusanrong)&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellspacing=&quot;1&quot; cellpadding=&quot;4&quot; bgcolor=&quot;#cccccc&quot; class=&quot;tabtop13&quot; align=&quot;center&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;tr&gt;&lt;td width=&quot;5%&quot; class=&quot;btbg font-center titfont&quot;&gt;序号&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td width=&quot;20%&quot; class=&quot;btbg font-center titfont&quot;&gt;主题&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td width=&quot;30%&quot; class=&quot;btbg font-center titfont&quot;&gt;URL&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td width=&quot;5%&quot; class=&quot;btbg font-center titfont&quot;&gt;是否有图&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td width=&quot;15%&quot; class=&quot;btbg font-center titfont&quot;&gt;评论数/阅读数&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td width=&quot;25%&quot;  class=&quot;btbg font-center titfont&quot;&gt;发表时间&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">htmlCont = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;tr&gt;&lt;td class=&quot;btbg2 font-center&quot;&gt; &#123;&#125; &lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td class=&quot;font-center&quot;&gt; &#123;&#125; &lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td class=&quot;font-center&quot;&gt;&lt;a href=&quot;&#123;&#125;&quot;&gt;&#123;&#125;&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td class=&quot;font-center&quot;&gt;&#123;&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td class=&quot;font-center&quot;&gt;&#123;&#125;/&#123;&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;td class=&quot;font-center&quot;&gt;&#123;&#125;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">htmlEnd = <span class="string">&#x27;&lt;/table&gt;&lt;br /&gt;&lt;/body&gt;&lt;/HTML&gt;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;学以致用，既然看了看python的爬虫，今天就动手折腾一个吧。在折腾的过程中，充分体会到了正则表达式的威力和用处，不过笨人有笨法子。除了正则，还能用字符串不是？&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    
    <category term="python爬虫" scheme="https://www.liuyong.online/tags/python%E7%88%AC%E8%99%AB/"/>
    
    <category term="新浪博客" scheme="https://www.liuyong.online/tags/%E6%96%B0%E6%B5%AA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫实践</title>
    <link href="https://www.liuyong.online/2020/08/31/Python%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5/"/>
    <id>https://www.liuyong.online/2020/08/31/Python%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5/</id>
    <published>2020-08-31T09:54:00.000Z</published>
    <updated>2022-10-27T12:22:28.988Z</updated>
    
    <content type="html"><![CDATA[<p>缘由：自己在新浪的博客，准备搬个家，可惜现在各个blog的空间越来越封闭了，于是准备自己整个爬虫，爬下来放到typecho中来</p><a id="more"></a><h3 id="爬虫概述"><a href="#爬虫概述" class="headerlink" title="爬虫概述"></a><font color=#FF8C00>爬虫概述</font></h3><table><thead><tr><th>爬虫种类</th><th>描述</th></tr></thead><tbody><tr><td>通用型网络爬</td><td>目标是尽可能大的覆盖网络对象；主要基于关键字</td></tr><tr><td>聚焦网络爬虫</td><td>抓取特定主题的网页，为相关用户提供数据资源</td></tr><tr><td>增量式网络爬虫</td><td>只更新变化的部分，对算法有要求</td></tr><tr><td>深层网络爬虫</td><td>需要注册登录之后才能获取内容的部分</td></tr></tbody></table><h3 id="爬虫结构"><a href="#爬虫结构" class="headerlink" title="爬虫结构"></a><font color=#FF8C00>爬虫结构</font></h3><ol><li>根据需求设定种子URL</li><li>把URL放入<strong>待抓取队列</strong></li><li>从<strong>待抓取URL</strong>读出要处理的URL，解析并下载对应的网页，根据需要解析存储；将处理完毕的URL放入已处理URL队列</li><li>将 <em>3</em> 中的数据分析出来的URL和已抓取的URL比较去重，将未处理的URL放入<strong>待抓取队列</strong>，进入新的循环。<h3 id="Python和HTTP有关的常用库"><a href="#Python和HTTP有关的常用库" class="headerlink" title="Python和HTTP有关的常用库"></a><font color=#FF8C00>Python和HTTP有关的常用库</font></h3></li><li>urllib2和urllib<br>主要用这个两个库，包括：</li></ol><ul><li>请求与响应</li><li>请求的Headers处理</li><li>Cookie的处理</li><li>设置超时</li><li>获取HTTP响应码</li><li>重定向</li><li>Proxy代理</li><li>Python3不用urllib2了，最简单就是用urllib.request</li></ul><ol start="2"><li>httplib和urllib<br>基本不用httplib</li><li>Requests</li></ol><p><strong>第三方Requests库</strong></p><h3 id="HTML解析"><a href="#HTML解析" class="headerlink" title="HTML解析"></a><font color=#FF8C00>HTML解析</font></h3><ol><li>用Python的正则表达式</li><li>Beautiful Soup</li><li>lxml</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;缘由：自己在新浪的博客，准备搬个家，可惜现在各个blog的空间越来越封闭了，于是准备自己整个爬虫，爬下来放到typecho中来&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    
    <category term="python爬虫" scheme="https://www.liuyong.online/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>完美数和亲和数计算之Python和C</title>
    <link href="https://www.liuyong.online/2020/08/28/%E5%AE%8C%E7%BE%8E%E6%95%B0%E5%92%8C%E4%BA%B2%E5%92%8C%E6%95%B0%E8%AE%A1%E7%AE%97%E4%B9%8BPython%E5%92%8CC/"/>
    <id>https://www.liuyong.online/2020/08/28/%E5%AE%8C%E7%BE%8E%E6%95%B0%E5%92%8C%E4%BA%B2%E5%92%8C%E6%95%B0%E8%AE%A1%E7%AE%97%E4%B9%8BPython%E5%92%8CC/</id>
    <published>2020-08-28T13:17:00.000Z</published>
    <updated>2022-10-27T12:22:28.964Z</updated>
    
    <content type="html"><![CDATA[<p>买了套书，是给大儿子看的：《万物有数学》看上去大儿子还是满意的。里面讲了完美数、亲和数、缺八数等等。在亲和数和完美数领域，都是和因数有关系的，所以一时手痒，顺便把计算机是怎么求的方法讲了一遍。动手用python和c都实现了一把：</p><a id="more"></a><p>先上C的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;time.h&gt;</span><br><span class="line">int getYSList(int number)&#123;</span><br><span class="line">int returnValue &#x3D; 1;</span><br><span class="line">int i&#x3D;2;</span><br><span class="line">while(i</span><br><span class="line">if(number % i &#x3D;&#x3D; 0)&#123;</span><br><span class="line">returnValue +&#x3D; i;</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">return returnValue;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">int number, sumOfys, i, sumOfsum, j;</span><br><span class="line">clock_t start, finish;</span><br><span class="line">printf(&quot;Please input the number:&quot;);</span><br><span class="line">scanf(&quot;%d&quot;, &amp;number);</span><br><span class="line">start&#x3D;clock();</span><br><span class="line">j &#x3D; 0;</span><br><span class="line">for(i&#x3D;2;i</span><br><span class="line">sumOfys &#x3D; getYSList(i);</span><br><span class="line">if(sumOfys&gt;i)&#123;</span><br><span class="line">sumOfsum &#x3D; getYSList(sumOfys);</span><br><span class="line">if(sumOfsum &#x3D;&#x3D; i)&#123;</span><br><span class="line">j++;</span><br><span class="line">printf(&quot;Find the [ - ]对 亲和数: m 和 m\n&quot;, j, i, sumOfys);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">finish&#x3D;clock();</span><br><span class="line">printf(&quot;亲和数计算时间: \t %f\n&quot;, (double)(finish-start)&#x2F;CLOCKS_PER_SEC);</span><br><span class="line">start&#x3D;clock();</span><br><span class="line">j &#x3D; 0;</span><br><span class="line">for(i&#x3D;2;i</span><br><span class="line">if(getYSList(i) &#x3D;&#x3D; i)&#123;</span><br><span class="line">j++;</span><br><span class="line">printf(&quot;Find the [ %d ]个完美数: %d\n&quot;, j, i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">finish&#x3D;clock();</span><br><span class="line">printf(&quot;完美数计算时间: \t %f\n&quot;, (double)(finish-start)&#x2F;CLOCKS_PER_SEC);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再上python的版本，做了2种，单进程和多进程的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;env python3</span><br><span class="line">## -*-coding: utf-8 -*-</span><br><span class="line">from colorama import Fore, init</span><br><span class="line">from time import time</span><br><span class="line">from multiprocessing import Pool</span><br><span class="line">import multiprocessing</span><br><span class="line"># 设置查找亲和数的范围</span><br><span class="line">AX_NUMBER &#x3D; 2000</span><br><span class="line"># 得到因数列表</span><br><span class="line"># 输入：number 需要计算其因数的数字</span><br><span class="line"># 输出：retList 不包括其自身的因数列表</span><br><span class="line">def getYSList(number):</span><br><span class="line">retList &#x3D; [1]</span><br><span class="line">i &#x3D; 2</span><br><span class="line">while i &lt; number:</span><br><span class="line">if number % i &#x3D;&#x3D; 0:</span><br><span class="line">retList.append(i)</span><br><span class="line">i +&#x3D; 1</span><br><span class="line"># print(retList)</span><br><span class="line">return retList</span><br><span class="line"># 计算因数之和</span><br><span class="line">def calSumOfYS(number):</span><br><span class="line">returnValue &#x3D; 1</span><br><span class="line">i &#x3D; 2</span><br><span class="line">while i       if number % i &#x3D;&#x3D; 0:</span><br><span class="line">returnValue +&#x3D; i</span><br><span class="line">i +&#x3D; 1</span><br><span class="line">return returnValue</span><br><span class="line"># 求亲和数方法ＩＩ</span><br><span class="line">def calQinhe2(number_start, number_scope):</span><br><span class="line">j &#x3D; 0</span><br><span class="line">for number in range(number_start, number_scope):</span><br><span class="line">sumNumberYS &#x3D; calSumOfYS(number)</span><br><span class="line">if sumNumberYS &lt;&#x3D; number:</span><br><span class="line">continue</span><br><span class="line">if number &#x3D;&#x3D; calSumOfYS(sumNumberYS):</span><br><span class="line">j +&#x3D; 1</span><br><span class="line">print(&quot;找到第&quot;,</span><br><span class="line">Fore.BLUE + &quot;[-]&quot; % j,</span><br><span class="line">&quot;对亲和数:&quot;,</span><br><span class="line">Fore.RED + &quot;m&quot; % number ,</span><br><span class="line">&quot; 和 &quot;,</span><br><span class="line">Fore.RED + &quot;m&quot; % sumNumberYS)</span><br><span class="line"># 计算亲和数多线程</span><br><span class="line">def calQinheM(number):</span><br><span class="line">sumNumberYS &#x3D; calSumOfYS(number)</span><br><span class="line">if sumNumberYS &gt; number:</span><br><span class="line">if number &#x3D;&#x3D; calSumOfYS(sumNumberYS):</span><br><span class="line">print(&quot;找到亲和数:&quot;,</span><br><span class="line">Fore.RED + &quot;m&quot; % number ,</span><br><span class="line">&quot; 和 &quot;,</span><br><span class="line">Fore.RED + &quot;m&quot; % sumNumberYS)</span><br><span class="line">#计算完美数ＩＩ</span><br><span class="line">def calWanmei2(number_start, number_scope):</span><br><span class="line">j &#x3D; 0</span><br><span class="line">for number in range(number_start, number_scope):</span><br><span class="line">if calSumOfYS(number) &#x3D;&#x3D; number:</span><br><span class="line">j +&#x3D; 1</span><br><span class="line">print(&quot;找到第&quot;,</span><br><span class="line">Fore.CYAN + &quot;[-]&quot; % j,</span><br><span class="line">&quot;个完美数:&quot;,</span><br><span class="line">Fore.RED + &quot;m&quot; % number)</span><br><span class="line"># 计算完美数多线程</span><br><span class="line">def calWanmeiM(number):</span><br><span class="line">if calSumOfYS(number) &#x3D;&#x3D; number:</span><br><span class="line">print(&quot;找到完美数:&quot;,Fore.RED + &quot;m&quot; % number)</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line"># 找亲和数</span><br><span class="line">init(autoreset&#x3D;True)</span><br><span class="line">number_scope &#x3D; int(input(&quot;请输入计算范围: &quot; ) or MAX_NUMBER)</span><br><span class="line">pool &#x3D; Pool(multiprocessing.cpu_count())</span><br><span class="line">print(Fore.BLUE + (&quot;#&quot;*10 + &quot;找亲和数&quot; + &quot;#&quot;*10))</span><br><span class="line">beginT &#x3D; time()</span><br><span class="line">calQinhe2(2, number_scope)</span><br><span class="line">endT &#x3D; time()</span><br><span class="line">print(&quot;calQinhe2 用了 %.5f 秒&quot; % (endT-beginT))</span><br><span class="line">beginT &#x3D; time()</span><br><span class="line">pool.map(calQinheM, [i for i in range(2, number_scope)])</span><br><span class="line">endT &#x3D; time()</span><br><span class="line">print(&quot;calQinheM 用了 %.5f 秒&quot; % (endT-beginT))</span><br><span class="line"># 找完美数</span><br><span class="line">print(&quot;\n\n\n&quot;)</span><br><span class="line">beginT &#x3D; time()</span><br><span class="line">calWanmei2(2, number_scope)</span><br><span class="line">endT &#x3D; time()</span><br><span class="line">print(&quot;calWanmei2 用了 %.5f 秒&quot; % (endT-beginT))</span><br><span class="line">beginT &#x3D; time()</span><br><span class="line">params &#x3D; [ i for i in range(2, number_scope)]</span><br><span class="line">#calWanmei2(2, number_scope)</span><br><span class="line">pool.map(calWanmeiM, params)</span><br><span class="line">endT &#x3D; time()</span><br><span class="line">print(&quot;calWanmeiM 用了 %.5f 秒&quot; % (endT-beginT))</span><br></pre></td></tr></table></figure><p>嗯，下面重点来了，都求在【20,000】以内的值：效率差太多了<br>python的执行效率：<br><img src="http://liusanrong.w85.mc-test.com/usr/uploads/2020/08/947785002.jpg" alt="Python求亲和数和完美数" title="python求亲和数和完美数"><br>C的执行效率：<br><img src="http://liusanrong.w85.mc-test.com/usr/uploads/2020/08/3992697926.jpg" alt="C求亲和数和完美数"><br>以上。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;买了套书，是给大儿子看的：《万物有数学》看上去大儿子还是满意的。里面讲了完美数、亲和数、缺八数等等。在亲和数和完美数领域，都是和因数有关系的，所以一时手痒，顺便把计算机是怎么求的方法讲了一遍。动手用python和c都实现了一把：&lt;/p&gt;</summary>
    
    
    
    <category term="程序人生" scheme="https://www.liuyong.online/categories/programer/"/>
    
    <category term="学习教育" scheme="https://www.liuyong.online/categories/learning/"/>
    
    
    <category term="Python" scheme="https://www.liuyong.online/tags/Python/"/>
    
    <category term="c" scheme="https://www.liuyong.online/tags/c/"/>
    
    <category term="完美数" scheme="https://www.liuyong.online/tags/%E5%AE%8C%E7%BE%8E%E6%95%B0/"/>
    
    <category term="亲和数" scheme="https://www.liuyong.online/tags/%E4%BA%B2%E5%92%8C%E6%95%B0/"/>
    
    <category term="执行效率" scheme="https://www.liuyong.online/tags/%E6%89%A7%E8%A1%8C%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
</feed>
